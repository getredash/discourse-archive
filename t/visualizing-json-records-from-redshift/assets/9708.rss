<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Visualizing JSON records from Redshift</title>
    <link>https://discuss.redash.io/t/visualizing-json-records-from-redshift/9708</link>
    <description>Hi everyone, happy holidays!

I&#39;m using Amazon Redshift as a datasource and one of the columns in the table returns the record as a JSON string. The JSON returned from the query has a format similar to:
```
{&quot;array_1&quot;:[0,128,256,512,1024],&quot;array_2&quot;:[0,1,2,3],&quot;version&quot;:&quot;v1&quot;}
``` 
I would like to be able to visualize `array_1` on the x-axis and `array_2` on the y-axis as a barchart, but is unable to do so through regular query statements since my column is not a [SUPER](https://docs.aws.amazon.com/redshift/latest/dg/query-super.html) type. Using `json_extract_path_text`, ([docs](https://docs.aws.amazon.com/redshift/latest/dg/JSON_EXTRACT_PATH_TEXT.html)), I&#39;m able to get the response `[0,128,256,512,1024]` under `array_1` but since it&#39;s just an array vs. multiple rows under the same column, the visualization does not work.

Ideally we don&#39;t want to rely on another data source like QRDS for this and would rather update the existing code for the query runner and visualizations to be able to parse JSON. I&#39;ve gone through [creating a new query runner in Redash](http://discuss.redash.io/t/creating-a-new-query-runner-data-source-in-redash/347) and [how to create new visualization types in Redash](http://discuss.redash.io/t/how-to-create-new-visualization-types-in-redash/86), but docs seems to be a bit outdated since the migration to React. 

Just to double check I&#39;m on the right track, at a high level I would need to figure out how to:
1. Update the query runner for Redshift to be able to parse JSON data (will try to reference the JSON query runner for this). 
2. Once the JSON array data is parsed into rows under a column, extend the existing chart visualizations to display the parsed `array_1` and `array_2`

Would anyone know if there is a better approach or have any references? Any tips or guidance will be greatly appreciated, thank you!</description>
    
    <lastBuildDate>Mon, 13 Dec 2021 21:15:44 +0000</lastBuildDate>
    <category>Usage Support</category>
    <atom:link href="https://discuss.redash.io/t/visualizing-json-records-from-redshift/9708.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Visualizing JSON records from Redshift</title>
        <dc:creator><![CDATA[jesse]]></dc:creator>
        <description><![CDATA[
            <p>Welcome to the forum and thanks for an excellent post. While we on the core team don’t use Redshift, I’m happy to help design / test a revision to the query runner that would support this kind of visualisation.</p>
<h3>
<a name="approach-1" class="anchor" href="https://discuss.redash.io#approach-1"></a>Approach</h3>
<p>I would not update the <em>visualisation</em> to work with a new column type. Partly because we don’t have updated docs covering how to do this (I’m working on that), but also because the visualisations are all designed to take a similar data format input. For example: a pivot table accepts the same kind of input as the stock table visualisation, but displays it differently. Visualisations do not and should not care which data source provided the data.</p>
<p>Instead, we can update the data source to recognise this JSON data and return it to the front-end in the standard format (an array of row objects).</p>
<p>The easiest way I can imagine to do this is like so:</p>
<ol>
<li>Query author uses <code>json_extract_path_text</code> to pull <code>array_1</code> into a column and <code>array_2</code> into a second column.</li>
</ol>
<div class="md-table">
<table>
<thead>
<tr>
<th>“array_1”</th>
<th>“array_2”</th>
</tr>
</thead>
<tbody>
<tr>
<td>[0,128,256,512,1024]</td>
<td>[0,1,2,3]</td>
</tr>
</tbody>
</table>
</div><ol start="2">
<li>The query_runner <em>somehow</em> monitors for this and pivots the data. One way it could sense this type of pivot is needed would be if the query result has exactly one row and each row contains JSON formatted data. Regardless, it would pivot the data like this:</li>
</ol>
<div class="md-table">
<table>
<thead>
<tr>
<th>“value_1”</th>
<th>“value_2”</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>1</td>
</tr>
<tr>
<td>128</td>
<td>2</td>
</tr>
<tr>
<td>256</td>
<td>3</td>
</tr>
<tr>
<td>512</td>
<td>4</td>
</tr>
<tr>
<td>1024</td>
<td>None</td>
</tr>
</tbody>
</table>
</div><ol start="3">
<li>The visualisation can be configured to use the <code>value_1</code> column for x and the <code>value_2</code> column for Y e.g.</li>
</ol>
          <p><a href="https://discuss.redash.io/t/visualizing-json-records-from-redshift/9708/2">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.redash.io/t/visualizing-json-records-from-redshift/9708/2</link>
        <pubDate>Mon, 13 Dec 2021 21:15:44 +0000</pubDate>
        <guid isPermaLink="false">discuss.redash.io-post-9708-2</guid>
        <source url="https://discuss.redash.io/t/visualizing-json-records-from-redshift/9708.rss">Visualizing JSON records from Redshift</source>
      </item>
      <item>
        <title>Visualizing JSON records from Redshift</title>
        <dc:creator><![CDATA[margie]]></dc:creator>
        <description><![CDATA[
            <p>Hi everyone, happy holidays!</p>
<p>I’m using Amazon Redshift as a datasource and one of the columns in the table returns the record as a JSON string. The JSON returned from the query has a format similar to:</p>
<pre><code class="lang-auto">{"array_1":[0,128,256,512,1024],"array_2":[0,1,2,3],"version":"v1"}
</code></pre>
<p>I would like to be able to visualize <code>array_1</code> on the x-axis and <code>array_2</code> on the y-axis as a barchart, but is unable to do so through regular query statements since my column is not a <a href="https://docs.aws.amazon.com/redshift/latest/dg/query-super.html" rel="noopener nofollow ugc">SUPER</a> type. Using <code>json_extract_path_text</code>, (<a href="https://docs.aws.amazon.com/redshift/latest/dg/JSON_EXTRACT_PATH_TEXT.html" rel="noopener nofollow ugc">docs</a>), I’m able to get the response <code>[0,128,256,512,1024]</code> under <code>array_1</code> but since it’s just an array vs. multiple rows under the same column, the visualization does not work.</p>
<p>Ideally we don’t want to rely on another data source like QRDS for this and would rather update the existing code for the query runner and visualizations to be able to parse JSON. I’ve gone through <a href="http://discuss.redash.io/t/creating-a-new-query-runner-data-source-in-redash/347">creating a new query runner in Redash</a> and <a href="http://discuss.redash.io/t/how-to-create-new-visualization-types-in-redash/86">how to create new visualization types in Redash</a>, but docs seems to be a bit outdated since the migration to React.</p>
<p>Just to double check I’m on the right track, at a high level I would need to figure out how to:</p>
<ol>
<li>Update the query runner for Redshift to be able to parse JSON data (will try to reference the JSON query runner for this).</li>
<li>Once the JSON array data is parsed into rows under a column, extend the existing chart visualizations to display the parsed <code>array_1</code> and <code>array_2</code>
</li>
</ol>
<p>Would anyone know if there is a better approach or have any references? Any tips or guidance will be greatly appreciated, thank you!</p>
          <p><a href="https://discuss.redash.io/t/visualizing-json-records-from-redshift/9708/1">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.redash.io/t/visualizing-json-records-from-redshift/9708/1</link>
        <pubDate>Mon, 13 Dec 2021 19:20:34 +0000</pubDate>
        <guid isPermaLink="false">discuss.redash.io-post-9708-1</guid>
        <source url="https://discuss.redash.io/t/visualizing-json-records-from-redshift/9708.rss">Visualizing JSON records from Redshift</source>
      </item>
  </channel>
</rss>
