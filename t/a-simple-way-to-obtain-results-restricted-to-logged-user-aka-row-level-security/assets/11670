<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>A simple way to obtain results restricted to logged user (aka: Row Level Security) - Development - Redash Discourse</title>
    <meta name="description" content="After some tweaking I found a way (probably not the best) to achieve this in Redash 
The idea is to use username or its groups to filter data, so each user sees only the data marked for him. The same query and datasource&amp;hellip;">
    <meta name="generator" content="Discourse 3.2.0.beta2-dev - https://github.com/discourse/discourse version 83621ccbe797223b48b624b00ef04f24672e1f03">
<link rel="icon" type="image/png" href="https://global.discourse-cdn.com/standard17/uploads/redash1/optimized/1X/01e20869afc0877e3e5aee0f94419b9e9bffa961_2_32x32.ico">
<link rel="apple-touch-icon" type="image/png" href="https://global.discourse-cdn.com/standard17/uploads/redash1/optimized/1X/e1838a8a0c506503a22e0c60e2334374b2895c87_2_180x180.png">
<meta name="theme-color" media="all" content="#ffffff">

<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes, viewport-fit=cover">
<link rel="canonical" href="https://discuss.redash.io/t/a-simple-way-to-obtain-results-restricted-to-logged-user-aka-row-level-security/11670" />

<link rel="search" type="application/opensearchdescription+xml" href="https://discuss.redash.io/opensearch.xml" title="Redash Discourse Search">

    <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/color_definitions_base__2_8fd59ae1f286f43b3ff17996df07ea951685249d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" class="light-scheme"/>

  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/desktop_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="desktop"  />



  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/checklist_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="checklist"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-adplugin_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-adplugin"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-akismet_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-akismet"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-cakeday_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-cakeday"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-chat-integration_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-chat-integration"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-details_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-details"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-footnote_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-footnote"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-lazy-videos_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-lazy-videos"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-local-dates_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-local-dates"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-narrative-bot_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-narrative-bot"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-presence_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-presence"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-solved_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-solved"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-spoiler-alert_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-spoiler-alert"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/hosted-site_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="hosted-site"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/poll_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="poll"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/poll_desktop_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="poll_desktop"  />

  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/desktop_theme_2_be4cb2b86ec06123c5e974acd20fd933d14b129d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="desktop_theme" data-theme-id="2" data-theme-name="default"/>

    
    <meta id="data-ga-universal-analytics" data-tracking-code="UA-47088186-6" data-json="{&quot;cookieDomain&quot;:&quot;auto&quot;}" data-auto-link-domains="">

  <link rel="preload" href="https://global.discourse-cdn.com/standard17/assets/google-universal-analytics-v3-08add7ec997ab472fcd9f821d32ff7caf4b8b9a5de2ec18ca723a040be07a098.gz.js" as="script">
<script defer src="https://global.discourse-cdn.com/standard17/assets/google-universal-analytics-v3-08add7ec997ab472fcd9f821d32ff7caf4b8b9a5de2ec18ca723a040be07a098.gz.js"></script>


        <link rel="alternate nofollow" type="application/rss+xml" title="RSS feed of &#39;A simple way to obtain results restricted to logged user (aka: Row Level Security)&#39;" href="https://discuss.redash.io/t/a-simple-way-to-obtain-results-restricted-to-logged-user-aka-row-level-security/11670.rss" />
    <meta property="og:site_name" content="Redash Discourse" />
<meta property="og:type" content="website" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:image" content="https://global.discourse-cdn.com/standard17/uploads/redash1/original/1X/e1838a8a0c506503a22e0c60e2334374b2895c87.png" />
<meta property="og:image" content="https://global.discourse-cdn.com/standard17/uploads/redash1/original/1X/e1838a8a0c506503a22e0c60e2334374b2895c87.png" />
<meta property="og:url" content="https://discuss.redash.io/t/a-simple-way-to-obtain-results-restricted-to-logged-user-aka-row-level-security/11670" />
<meta name="twitter:url" content="https://discuss.redash.io/t/a-simple-way-to-obtain-results-restricted-to-logged-user-aka-row-level-security/11670" />
<meta property="og:title" content="A simple way to obtain results restricted to logged user (aka: Row Level Security)" />
<meta name="twitter:title" content="A simple way to obtain results restricted to logged user (aka: Row Level Security)" />
<meta property="og:description" content="After some tweaking I found a way (probably not the best) to achieve this in Redash  The idea is to use username or its groups to filter data, so each user sees only the data marked for him. The same query and datasource could serve for all users.  Filtering data could be done easily with simple conditions ( i.e select * from data where ….. and allowed_groups in (redash_user_groups) )  I tried some different options at client or backend, and finally the backend one seems best.  For example, this..." />
<meta name="twitter:description" content="After some tweaking I found a way (probably not the best) to achieve this in Redash  The idea is to use username or its groups to filter data, so each user sees only the data marked for him. The same query and datasource could serve for all users.  Filtering data could be done easily with simple conditions ( i.e select * from data where ….. and allowed_groups in (redash_user_groups) )  I tried some different options at client or backend, and finally the backend one seems best.  For example, this..." />
<meta property="og:article:section" content="Development" />
<meta property="og:article:section:color" content="8C6238" />
<meta property="og:article:tag" content="query_results" />
<meta property="article:published_time" content="2023-03-07T18:16:01+00:00" />
<meta property="og:ignore_canonical" content="true" />


    
  </head>
  <body class="crawler ">
    
    <header>
  <a href="/">
    Redash Discourse
  </a>
</header>

    <div id="main-outlet" class="wrap" role="main">
        <div id="topic-title">
    <h1>
      <a href="/t/a-simple-way-to-obtain-results-restricted-to-logged-user-aka-row-level-security/11670">A simple way to obtain results restricted to logged user (aka: Row Level Security)</a>
    </h1>

      <div class="topic-category" itemscope itemtype="http://schema.org/BreadcrumbList">
          <span itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
            <a href="https://discuss.redash.io/c/development/7" class="badge-wrapper bullet" itemprop="item">
              <span class='badge-category-bg' style='background-color: #8C6238'></span>
              <span class='badge-category clear-badge'>
                <span class='category-name' itemprop='name'>Development</span>
              </span>
            </a>
            <meta itemprop="position" content="1" />
          </span>
      </div>

      <div class="topic-category">
        <div class='discourse-tags list-tags'>
            <a href='https://discuss.redash.io/tag/query_results' class='discourse-tag' rel="tag">query_results</a>
        </div>
      </div>
  </div>

  

    <div itemscope itemtype='http://schema.org/DiscussionForumPosting'>
      <meta itemprop='headline' content='A simple way to obtain results restricted to logged user (aka: Row Level Security)'>
        <meta itemprop='articleSection' content='Development'>
      <meta itemprop='keywords' content='query_results'>
      <div itemprop='publisher' itemscope itemtype="http://schema.org/Organization">
        <meta itemprop='name' content='Redash Discourse'>
          <div itemprop='logo' itemscope itemtype="http://schema.org/ImageObject">
            <meta itemprop='url' content='https://global.discourse-cdn.com/standard17/uploads/redash1/original/1X/c07bc573841e1e4a0013ea3b6fe088a1534228a3.png'>
          </div>
      </div>

          <div id='post_1'  class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/Losalo'><span itemprop='name'>Losalo</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/a-simple-way-to-obtain-results-restricted-to-logged-user-aka-row-level-security/11670">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2023-03-07T18:16:01Z' class='post-time'>
                    March 7, 2023,  6:16pm
                  </time>
                  <meta itemprop='dateModified' content='2023-03-07T18:30:05Z'>
              <span itemprop='position'>1</span>
              </span>
            </div>
            <div class='post' itemprop='articleBody'>
              <p>After some tweaking I found a way (probably not the best) to achieve this in Redash</p>
<p>The idea is to use username or its groups to filter data, so each user sees only the data marked for him. The same query and datasource could serve for all users.</p>
<p>Filtering data could be done easily with simple conditions ( i.e <code>select * from data where ….. and allowed_groups in (redash_user_groups)</code> )</p>
<p>I tried some different options at client or backend, and finally the backend one seems best.</p>
<p>For example, this could be a simple query to start trying to check values at execution time. (The values we want to be substituted should have some fixed specific names, not easy to be used some other way)</p>
<pre><code class="lang-auto">Select
'__REDASH_USER'        as redash_connected_user, 
'__REDASH_USER_GROUPS' as redash_user_groups, 
from dual
</code></pre>
<p>The aim is to substitute __REDASH_USER with the actual user who retrieves data and __REDASH_USER_GROUPS with his redash groups at execution time.</p>
<p>After some tests the easier way to do it is at backend, specifically at app/redash/handlers/query_results.py Adding some lines at run_query</p>
<pre><code class="lang-auto">    (...)
    query_text = data_source.query_runner.apply_auto_limit(
        query.text, should_apply_auto_limit
    )

    # RLS  Substitute username or groups.  Turn cache or previous results off with max_age=0

    if '__REDASH_USER' in query_text or '__REDASH_USER_GROUPS' in query_text:
        if hasattr(current_user, 'email'):
            query_text = query_text.replace('__REDASH_USER_GROUPS',','.join(str(v) for v in current_user.group_ids))
            query_text = query_text.replace('__REDASH_USER',current_user.email)
        else:
            query_text = query_text.replace('__REDASH_USER_GROUPS',' -1 ')
            query_text = query_text.replace('__REDASH_USER','guest@example.com')
        max_age=0

      # END RLS

    if query.missing_params:
   (...)
</code></pre>
<p>That way, at query execution time, __REDASH_USER would be substituted with user’s mail and __REDASH_USER_GROUPS would be substituted with a list of comma separated values of the redash groups ids the user belongs to.</p>
<p>Then, the result is</p>
<pre><code class="lang-auto">REDASH_CONNECTED_USER  REDASH_USER_GROUPS
somebody@mydomain.com           1,2
</code></pre>
<p>So we can use these values in any query we want to filter data depending on users or groups (preferably)</p>
<p>One potential problem could be cached or previous results, but seems that setting max_age=0 when substitution is done no results are stored or cached (at least on my tests, probably needs deeper testing)</p>
<p>It is important to note that public or using the api_key way of retrieving data have no username associated, so this substitution just returns ‘<a href="mailto:guest@example.com">guest@example.com</a>’ and -1 as group.</p>
<p>(In <a href="https://github.com/getredash/redash/pull/3723" rel="noopener nofollow ugc">#3723</a>  there is a similar discussion with other terms)</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
    </div>






    </div>
    <footer class="container wrap">
  <nav class='crawler-nav'>
    <ul>
      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
        <span itemprop='name'>
          <a href='/' itemprop="url">Home </a>
        </span>
      </li>
      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
        <span itemprop='name'>
          <a href='/categories' itemprop="url">Categories </a>
        </span>
      </li>
      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
        <span itemprop='name'>
          <a href='/guidelines' itemprop="url">FAQ/Guidelines </a>
        </span>
      </li>
        <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
          <span itemprop='name'>
            <a href='http://redash.io/terms.html' itemprop="url">Terms of Service </a>
          </span>
        </li>
        <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
          <span itemprop='name'>
            <a href='http://redash.io/privacy.html' itemprop="url">Privacy Policy </a>
          </span>
        </li>
    </ul>
  </nav>
  <p class='powered-by-link'>Powered by <a href="https://www.discourse.org">Discourse</a>, best viewed with JavaScript enabled</p>
</footer>

    
    
  </body>
  
</html>
