<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Import custom python package/module for the python data source on dockerized redash server</title>
    <link>https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521</link>
    <description>### Summary
I&#39;m trying to make a custom python package usable inside a Redash query that use the **python data source**. The Redash server is self-hosted, running in a docker container (Debian GNU/Linux 10). The whole instance is managed by docker-compose. The Redash version is **9.0.0-beta (dev)**. For now, we are not able to update to a newer version of Redash.

### What I tried
I created a test code python file, initially with only one method, let&#39;s say `test_method()`. I copied the file onto the docker container to *&quot;/home/username/custom-python-for-redash/test_code.py&quot;*. 
Then I restarted the Redash instance and added this very same absolute path to the **AdditionalModulesPaths** option of the python data source. When I try to use the code in a query, e.g. by typing
```
from test_code import test_method
print(test_method())
```
I get 
```
Error running query: &lt;class &#39;Exception&#39;&gt; &#39;test_code&#39; is not configured as a supported import module
```

I also tried to make my python module a package to rule out the possibility that only proper packages are supported for import in Redash. For that, I moved it into a subdirectory (say: `test_package`) and created a `__init__.py` file. Then I copied said subdirectory to the container, like above, this time to *&quot;/home/username/custom-python-for-redash/test_package&quot;*. 
I restarted the Redash instance again and added this absolute path to the **AdditionalModulesPaths** option. However, this yields the same error as written above. 

In my despair I also tried (semi-random) variations for the absolute path, e.g. including or omitting the `.py` extension, using the path to the `__init__.py` file, using the path to the package directory instead of the actual file in it, etc. but with no results.</description>
    
    <lastBuildDate>Wed, 01 Feb 2023 11:18:13 +0000</lastBuildDate>
    <category>Self Hosted Redash Support</category>
    <atom:link href="https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Import custom python package/module for the python data source on dockerized redash server</title>
        <dc:creator><![CDATA[nellson_eilers]]></dc:creator>
        <description><![CDATA[
            <h3>
<a name="solution-1" class="anchor" href="https://discuss.redash.io#solution-1"></a>Solution</h3>
<p>I fixed the problem myself. The source folder containing the module in question was initially copied by a user other than the one that (automatically) instantiates the redash server container. The redash instance therefore had insufficient rights on the folder and could not read it, which is why modules in it weren’t found.</p>
<p>It is worth noting that in addition to writing the absolute path to the module into the <strong>AdditionalModulesPaths</strong> field, the name of the module inside that path has to be written into the field labelled “<strong>Modules to import prior to running the script</strong>” as well. After that, I could finally use <code>import [...]</code> to import and use my module.</p>
          <p><a href="https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521/3">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521/3</link>
        <pubDate>Wed, 01 Feb 2023 11:18:13 +0000</pubDate>
        <guid isPermaLink="false">discuss.redash.io-post-11521-3</guid>
        <source url="https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521.rss">Import custom python package/module for the python data source on dockerized redash server</source>
      </item>
      <item>
        <title>Import custom python package/module for the python data source on dockerized redash server</title>
        <dc:creator><![CDATA[nellson_eilers]]></dc:creator>
        <description><![CDATA[
            <p>I also tried to install my local package on the Redash server docker container using <strong>pip</strong>. The installation succeeds and <em>test_package</em> is now listed when I execute <code>pip list</code>. However, with the data source configured as described in the question above, the error when trying to use the module in a query through the frontend still occurs.</p>
<p>The <a href="https://redash.io/help/data-sources/querying/python" rel="noopener nofollow ugc">Redash Python data source documentation</a> does not really help as well, since the information there is very limited and only describes what I already tried in the beginning.</p>
<p>Any help is appreciated.</p>
          <p><a href="https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521/2">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521/2</link>
        <pubDate>Wed, 01 Feb 2023 09:37:40 +0000</pubDate>
        <guid isPermaLink="false">discuss.redash.io-post-11521-2</guid>
        <source url="https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521.rss">Import custom python package/module for the python data source on dockerized redash server</source>
      </item>
      <item>
        <title>Import custom python package/module for the python data source on dockerized redash server</title>
        <dc:creator><![CDATA[nellson_eilers]]></dc:creator>
        <description><![CDATA[
            <h3>
<a name="summary-1" class="anchor" href="https://discuss.redash.io#summary-1"></a>Summary</h3>
<p>I’m trying to make a custom python package usable inside a Redash query that use the <strong>python data source</strong>. The Redash server is self-hosted, running in a docker container (Debian GNU/Linux 10). The whole instance is managed by docker-compose. The Redash version is <strong>9.0.0-beta (dev)</strong>. For now, we are not able to update to a newer version of Redash.</p>
<h3>
<a name="what-i-tried-2" class="anchor" href="https://discuss.redash.io#what-i-tried-2"></a>What I tried</h3>
<p>I created a test code python file, initially with only one method, let’s say <code>test_method()</code>. I copied the file onto the docker container to <em>“/home/username/custom-python-for-redash/test_code.py”</em>.<br>
Then I restarted the Redash instance and added this very same absolute path to the <strong>AdditionalModulesPaths</strong> option of the python data source. When I try to use the code in a query, e.g. by typing</p>
<pre><code class="lang-auto">from test_code import test_method
print(test_method())
</code></pre>
<p>I get</p>
<pre><code class="lang-auto">Error running query: &lt;class 'Exception'&gt; 'test_code' is not configured as a supported import module
</code></pre>
<p>I also tried to make my python module a package to rule out the possibility that only proper packages are supported for import in Redash. For that, I moved it into a subdirectory (say: <code>test_package</code>) and created a <code>__init__.py</code> file. Then I copied said subdirectory to the container, like above, this time to <em>“/home/username/custom-python-for-redash/test_package”</em>.<br>
I restarted the Redash instance again and added this absolute path to the <strong>AdditionalModulesPaths</strong> option. However, this yields the same error as written above.</p>
<p>In my despair I also tried (semi-random) variations for the absolute path, e.g. including or omitting the <code>.py</code> extension, using the path to the <code>__init__.py</code> file, using the path to the package directory instead of the actual file in it, etc. but with no results.</p>
          <p><a href="https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521/1">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521/1</link>
        <pubDate>Fri, 27 Jan 2023 15:39:14 +0000</pubDate>
        <guid isPermaLink="false">discuss.redash.io-post-11521-1</guid>
        <source url="https://discuss.redash.io/t/import-custom-python-package-module-for-the-python-data-source-on-dockerized-redash-server/11521.rss">Import custom python package/module for the python data source on dockerized redash server</source>
      </item>
  </channel>
</rss>
