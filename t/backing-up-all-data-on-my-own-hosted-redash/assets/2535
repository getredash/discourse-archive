<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Backing up all data on my own hosted redash - Self Hosted Redash Support - Redash Discourse</title>
    <meta name="description" content="Hi, 
We are hosting our own redash instance (I worked with it in the past - it rocks!) 
I’d like to create a daily backup of all the data, so that in the case where we need to re-install the instance, we can just restore&amp;hellip;">
    <meta name="generator" content="Discourse 3.2.0.beta2-dev - https://github.com/discourse/discourse version 83621ccbe797223b48b624b00ef04f24672e1f03">
<link rel="icon" type="image/png" href="https://global.discourse-cdn.com/standard17/uploads/redash1/optimized/1X/01e20869afc0877e3e5aee0f94419b9e9bffa961_2_32x32.ico">
<link rel="apple-touch-icon" type="image/png" href="https://global.discourse-cdn.com/standard17/uploads/redash1/optimized/1X/e1838a8a0c506503a22e0c60e2334374b2895c87_2_180x180.png">
<meta name="theme-color" media="all" content="#ffffff">

<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes, viewport-fit=cover">
<link rel="canonical" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535" />

<link rel="search" type="application/opensearchdescription+xml" href="https://discuss.redash.io/opensearch.xml" title="Redash Discourse Search">

    <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/color_definitions_base__2_8fd59ae1f286f43b3ff17996df07ea951685249d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" class="light-scheme"/>

  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/desktop_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="desktop"  />



  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/checklist_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="checklist"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-adplugin_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-adplugin"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-akismet_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-akismet"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-cakeday_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-cakeday"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-chat-integration_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-chat-integration"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-details_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-details"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-footnote_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-footnote"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-lazy-videos_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-lazy-videos"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-local-dates_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-local-dates"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-narrative-bot_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-narrative-bot"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-presence_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-presence"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-solved_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-solved"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-spoiler-alert_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-spoiler-alert"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/hosted-site_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="hosted-site"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/poll_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="poll"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/poll_desktop_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="poll_desktop"  />

  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/desktop_theme_2_be4cb2b86ec06123c5e974acd20fd933d14b129d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="desktop_theme" data-theme-id="2" data-theme-name="default"/>

    
    <meta id="data-ga-universal-analytics" data-tracking-code="UA-47088186-6" data-json="{&quot;cookieDomain&quot;:&quot;auto&quot;}" data-auto-link-domains="">

  <link rel="preload" href="https://global.discourse-cdn.com/standard17/assets/google-universal-analytics-v3-08add7ec997ab472fcd9f821d32ff7caf4b8b9a5de2ec18ca723a040be07a098.gz.js" as="script">
<script defer src="https://global.discourse-cdn.com/standard17/assets/google-universal-analytics-v3-08add7ec997ab472fcd9f821d32ff7caf4b8b9a5de2ec18ca723a040be07a098.gz.js"></script>


        <link rel="alternate nofollow" type="application/rss+xml" title="RSS feed of &#39;Backing up all data on my own hosted redash&#39;" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535.rss" />
    <meta property="og:site_name" content="Redash Discourse" />
<meta property="og:type" content="website" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:image" content="https://global.discourse-cdn.com/standard17/uploads/redash1/original/1X/e1838a8a0c506503a22e0c60e2334374b2895c87.png" />
<meta property="og:image" content="https://global.discourse-cdn.com/standard17/uploads/redash1/original/1X/e1838a8a0c506503a22e0c60e2334374b2895c87.png" />
<meta property="og:url" content="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535" />
<meta name="twitter:url" content="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535" />
<meta property="og:title" content="Backing up all data on my own hosted redash" />
<meta name="twitter:title" content="Backing up all data on my own hosted redash" />
<meta property="og:description" content="Hi,  We are hosting our own redash instance (I worked with it in the past - it rocks!)  I’d like to create a daily backup of all the data, so that in the case where we need to re-install the instance, we can just restore it from the backup.  What is the best way to do it?  I noticed that there are numerous api endpoints I can call (/api/[queries|dashboards|…]), but I couldn’t find any documentation for them, it is not clear if I need anything else and how what is the process to restore things wi..." />
<meta name="twitter:description" content="Hi,  We are hosting our own redash instance (I worked with it in the past - it rocks!)  I’d like to create a daily backup of all the data, so that in the case where we need to re-install the instance, we can just restore it from the backup.  What is the best way to do it?  I noticed that there are numerous api endpoints I can call (/api/[queries|dashboards|…]), but I couldn’t find any documentation for them, it is not clear if I need anything else and how what is the process to restore things wi..." />
<meta property="og:article:section" content="Support" />
<meta property="og:article:section:color" content="BF1E2E" />
<meta property="og:article:section" content="Self Hosted Redash Support" />
<meta property="og:article:section:color" content="AB9364" />
<meta name="twitter:label1" value="Reading time" />
<meta name="twitter:data1" value="14 mins 🕑" />
<meta name="twitter:label2" value="Likes" />
<meta name="twitter:data2" value="9 ❤" />
<meta property="article:published_time" content="2018-10-18T06:49:01+00:00" />
<meta property="og:ignore_canonical" content="true" />


    <script type="application/ld+json">{"@context":"http://schema.org","@type":"QAPage","name":"Backing up all data on my own hosted redash","mainEntity":{"@type":"Question","name":"Backing up all data on my own hosted redash","text":"Hi,\n\nWe are hosting our own redash instance (I worked with it in the past - it rocks!)\n\nI’d like to create a daily backup of all the data, so that in the case where we need to re-install the instance, we can just restore it from the backup.\n\nWhat is the best way to do it?\n\nI noticed that there are n&hellip;","upvoteCount":1,"answerCount":0,"dateCreated":"2018-10-18T06:49:01.367Z","author":{"@type":"Person","name":"Yotam"}}}</script>
  </head>
  <body class="crawler ">
    
    <header>
  <a href="/">
    Redash Discourse
  </a>
</header>

    <div id="main-outlet" class="wrap" role="main">
        <div id="topic-title">
    <h1>
      <a href="/t/backing-up-all-data-on-my-own-hosted-redash/2535">Backing up all data on my own hosted redash</a>
    </h1>

      <div class="topic-category" itemscope itemtype="http://schema.org/BreadcrumbList">
          <span itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
            <a href="https://discuss.redash.io/c/support/6" class="badge-wrapper bullet" itemprop="item">
              <span class='badge-category-bg' style='background-color: #BF1E2E'></span>
              <span class='badge-category clear-badge'>
                <span class='category-name' itemprop='name'>Support</span>
              </span>
            </a>
            <meta itemprop="position" content="1" />
          </span>
          <span itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
            <a href="https://discuss.redash.io/c/support/support-self-hosted/9" class="badge-wrapper bullet" itemprop="item">
              <span class='badge-category-bg' style='background-color: #AB9364'></span>
              <span class='badge-category clear-badge'>
                <span class='category-name' itemprop='name'>Self Hosted Redash Support</span>
              </span>
            </a>
            <meta itemprop="position" content="2" />
          </span>
      </div>

  </div>

  

    <div itemscope itemtype='http://schema.org/DiscussionForumPosting'>
      <meta itemprop='headline' content='Backing up all data on my own hosted redash'>
        <meta itemprop='articleSection' content='Self Hosted Redash Support'>
      <meta itemprop='keywords' content=''>
      <div itemprop='publisher' itemscope itemtype="http://schema.org/Organization">
        <meta itemprop='name' content='Redash Discourse'>
          <div itemprop='logo' itemscope itemtype="http://schema.org/ImageObject">
            <meta itemprop='url' content='https://global.discourse-cdn.com/standard17/uploads/redash1/original/1X/c07bc573841e1e4a0013ea3b6fe088a1534228a3.png'>
          </div>
      </div>

          <div id='post_1'  class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/yotam.ggt'><span itemprop='name'>yotam.ggt</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2018-10-18T06:49:01Z' class='post-time'>
                    October 18, 2018,  6:49am
                  </time>
                  <meta itemprop='dateModified' content='2018-10-18T06:49:01Z'>
              <span itemprop='position'>1</span>
              </span>
            </div>
            <div class='post' itemprop='articleBody'>
              <p>Hi,</p>
<p>We are hosting our own redash instance (I worked with it in the past - it rocks!)<br>
I’d like to create a daily backup of all the data, so that in the case where we need to re-install the instance, we can just restore it from the backup.</p>
<p>What is the best way to do it?<br>
I noticed that there are numerous api endpoints I can call (/api/[queries|dashboards|…]), but I couldn’t find any documentation for them, it is not clear if I need anything else and how what is the process to restore things with the data I got from the above api.</p>
<p>Thanks,<br>
Yotam.</p>
<p>P.S., btw, the in only reason for us to be using a self-hosted redash is security…</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="1" />
              <span class='post-likes'>1 Like</span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_2' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/arikfr'><span itemprop='name'>arikfr</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2018-10-18T07:54:59Z' class='post-time'>
                    October 18, 2018,  7:54am
                  </time>
                  <meta itemprop='dateModified' content='2018-10-18T07:54:59Z'>
              <span itemprop='position'>2</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Hi!</p>
<p>The easiest way is to take a backup of the Postgres database used for metadata by Redash. This way you get a snapshot of everything and there are standard tools to do this backup.</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="1" />
              <span class='post-likes'>1 Like</span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

                <div class='crawler-linkback-list' itemscope itemtype='http://schema.org/ItemList'>
                      <div itemprop='itemListElement' itemscope itemtype='http://schema.org/ListItem'>
                        <a itemprop='url' href="http://discuss.redash.io/t/how-to-connect-to-redashs-database-in-docker-installation/4540/2">How to connect to Redash&#39;s database in docker installation</a>
                        <meta itemprop='position' content='1'>
                      </div>
                </div>
          </div>
          <div id='post_3' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/safo'><span itemprop='name'>safo</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2018-10-18T11:55:25Z' class='post-time'>
                    October 18, 2018, 11:55am
                  </time>
                  <meta itemprop='dateModified' content='2018-10-18T12:02:21Z'>
              <span itemprop='position'>3</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Follow up Question - I tried to back up the DB using pg_dump and It took a lot of time because of the events table (it has 10M rows) and the query_results table(1M rows). can u please elaborate what this data is used for and if it can be purged?</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="1" />
              </div>

          </div>
          <div id='post_4' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/bbrowski'><span itemprop='name'>bbrowski</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2018-10-22T09:27:39Z' class='post-time'>
                    October 22, 2018,  9:27am
                  </time>
                  <meta itemprop='dateModified' content='2018-10-22T09:27:39Z'>
              <span itemprop='position'>4</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Im a bit stuck here as well. I created all my queries and some dashboards on a vm and now want to move them all to our production machine.</p>
<p>I did: sudo -u redash pg_dump &gt; backup_filename.sql<br>
Then I copied the sql file to the new server - both servers were running the newest and same version of redash.</p>
<p>on the new server I ran: sudo -u redash psql -d redash &lt; backup_filename.sql</p>
<p>There were a lot of errors telling me about access permissions and that things already exist. I still cant see the queries or the dashboards. What am I doing wrong. I realise it’s probably some noob error.</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="1" />
              <span class='post-likes'>1 Like</span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="1" />
              </div>

          </div>
          <div id='post_5' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/arikfr'><span itemprop='name'>arikfr</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2018-10-28T07:53:29Z' class='post-time'>
                    October 28, 2018,  7:53am
                  </time>
                  <meta itemprop='dateModified' content='2018-10-28T07:53:29Z'>
              <span itemprop='position'>5</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <aside class="quote no-group" data-post="3" data-topic="2535" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://sjc6.discourse-cdn.com/standard17/user_avatar/discuss.redash.io/safo/40/293_1.png" class="avatar"> safo:</div>
<blockquote>
<p>Follow up Question - I tried to back up the DB using pg_dump and It took a lot of time because of the events table (it has 10M rows) and the query_results table(1M rows). can u please elaborate what this data is used for and if it can be purged?</p>
</blockquote>
</aside>
<p><code>events</code> table can be purged / backed up without data (just the structure). <code>query_results</code> needs to be backed up, although you probably don’t need all the 1M rows (only the ones still referenced by <code>queries.latest_query_data_id</code>). There is a cleanup process that runs once a week, you might need to run it more frequently so it can keep up with deleting the unused query results.</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_6' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/arikfr'><span itemprop='name'>arikfr</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2018-10-28T07:54:28Z' class='post-time'>
                    October 28, 2018,  7:54am
                  </time>
                  <meta itemprop='dateModified' content='2018-10-28T07:54:28Z'>
              <span itemprop='position'>6</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <aside class="quote no-group" data-post="4" data-topic="2535">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://sjc6.discourse-cdn.com/standard17/user_avatar/discuss.redash.io/bbrowski/40/658_1.png" class="avatar"> bbrowski:</div>
<blockquote>
<p>There were a lot of errors telling me about access permissions and that things already exist. I still cant see the queries or the dashboards. What am I doing wrong. I realise it’s probably some noob error.</p>
</blockquote>
</aside>
<p>Maybe your new server already has database created? Just drop it before trying to restore the old one.</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="1" />
              </div>

          </div>
          <div id='post_7' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/bbrowski'><span itemprop='name'>bbrowski</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2018-10-29T17:14:43Z' class='post-time'>
                    October 29, 2018,  5:14pm
                  </time>
                  <meta itemprop='dateModified' content='2018-10-30T08:12:57Z'>
              <span itemprop='position'>7</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Thank you arikfr. For others like me who want to move all their quires/users/dashboards from one server to a new server this is what I did to get it working after I copied the backup_filename.sql to the new server (im not using a docker version):</p>
<p>first stop everything because you cant drop the db without stopping the services that are using the db:<br>
sudo supervisorctl stop all</p>
<p>then drop the existing redash db (I would probably would make a backup of this before you do it - like you did to backup the other server but call it something else):<br>
sudo -u redash dropdb redash</p>
<p>create an new empty db:<br>
sudo -u postgres createdb redash --owner=redash</p>
<p>replace the db with the sql you took from your other instance<br>
sudo -u redash psql -d redash &lt; backup_filename.sql</p>
<p>restart everything:<br>
sudo supervisorctl restart all</p>
<p>It should be good to go. This works on a clean install where you haven’t set us the server yet and created the admin account. I noticed that on one of the servers that I had created the admin account it was not displaying the new queries (the same email address was used for the admin) - when I checked the .env file there were missing lines (database_url, redis_url, log_level). Once I put them back in and restarted the services it all worked.</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="1" />
              <span class='post-likes'>1 Like</span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_8' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/achin'><span itemprop='name'>achin</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2018-12-06T11:59:06Z' class='post-time'>
                    December 6, 2018, 11:59am
                  </time>
                  <meta itemprop='dateModified' content='2019-01-09T14:10:00Z'>
              <span itemprop='position'>8</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Hi,</p>
<p>Thanks for the post, it helped me a lot in setting up redash for the first time.</p>
<p>Though I am stuck at this point right now where I am not able to get past my login screen after dumping the old data to new screen.</p>
<p>So now, I am not getting setup redash screen.<br>
instead, I am getting sign in screen and once I put anything and press enter it gives this error:</p>
<p><strong>Internal Server Error</strong><br>
<strong>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</strong></p>
<p>Not sure what am I missing here.</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="1" />
              <span class='post-likes'>1 Like</span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_9' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/hananv'><span itemprop='name'>hananv</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2019-02-18T21:10:34Z' class='post-time'>
                    February 18, 2019,  9:10pm
                  </time>
                  <meta itemprop='dateModified' content='2019-02-18T21:10:34Z'>
              <span itemprop='position'>9</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>I have the same issue of internal server error<br>
i’m using docker images and i tried to backup data of one server (4.0) and move it to another server (6.0)<br>
I follow this instruction with these instructions</p><aside class="quote quote-modified" data-post="1" data-topic="3041">
  <div class="title">
    <div class="quote-controls"></div>
    <img loading="lazy" alt="" width="20" height="20" src="https://sjc6.discourse-cdn.com/standard17/user_avatar/discuss.redash.io/justinclift/40/811_2.png" class="avatar">
    <a href="http://discuss.redash.io/t/exact-steps-needed-for-upgrade/3041">Exact steps needed for upgrade?</a> <a class="badge-wrapper  bullet" href="/c/support/support-self-hosted/9"><span class="badge-category-parent-bg" style="background-color: #BF1E2E;"></span><span class="badge-category-bg" style="background-color: #AB9364;"></span><span style="" data-drop-close="true" class="badge-category clear-badge" title="Support on installing, configuring and troubleshooting issues with self hosted Redash.">Self Hosted Redash Support</span></a>
  </div>
  <blockquote>
    Issue Summary
It turns out the docker image based redash I’m using is now outdated (v5), whereas there’s a newer (v6) version available. 
However, the <a href="https://redash.io/help/open-source/admin-guide/how-to-upgrade" rel="noopener nofollow ugc">“documentation” on how to upgrade</a> seems to be more of a high level overview, missing the more detailed specifics needed by new Redash users.  For example, the first line of the current doc: 

Make sure to backup your data. You only need to backup your PostgreSQL metadata as the data in Redis is transient. 

For someone new to Redash, that’s really…
  </blockquote>
</aside>

<p>but still got server error<br>
could someone suggest a solution ?</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="1" />
              </div>

          </div>
          <div id='post_10' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/justinclift'><span itemprop='name'>justinclift</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2019-03-04T04:23:46Z' class='post-time'>
                    March 4, 2019,  4:23am
                  </time>
                  <meta itemprop='dateModified' content='2019-03-04T04:23:46Z'>
              <span itemprop='position'>10</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Oops, didn’t see this.  Did you get it figured out, or do you still need help with it? <img src="https://emoji.discourse-cdn.com/twitter/smile.png?v=6" title=":smile:" class="emoji" alt=":smile:"></p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_11' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/hananv'><span itemprop='name'>hananv</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2019-03-04T05:17:56Z' class='post-time'>
                    March 4, 2019,  5:17am
                  </time>
                  <meta itemprop='dateModified' content='2019-03-04T05:17:56Z'>
              <span itemprop='position'>11</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>yes, i still need help , thanks</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_12' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/justinclift'><span itemprop='name'>justinclift</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2019-03-05T10:12:22Z' class='post-time'>
                    March 5, 2019, 10:12am
                  </time>
                  <meta itemprop='dateModified' content='2019-03-05T10:12:22Z'>
              <span itemprop='position'>12</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p><a class="mention" href="/u/hananv">@hananv</a> No worries. <img src="https://emoji.discourse-cdn.com/twitter/smile.png?v=6" title=":smile:" class="emoji" alt=":smile:"></p>
<p>Are you ok to cut-n-paste the error message for the server here?  Also, was the error when you were doing the backup, the upgrade, or starting the server after the upgrade?</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_13' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/hananv'><span itemprop='name'>hananv</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2019-03-13T06:03:55Z' class='post-time'>
                    March 13, 2019,  6:03am
                  </time>
                  <meta itemprop='dateModified' content='2019-03-13T06:03:55Z'>
              <span itemprop='position'>13</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p><a class="mention" href="/u/justinclift">@justinclift</a><br>
logs are long</p>
<p>Redash6 was install via dockers on new computer and i can access to it at test:5000<br>
then i tried to restore DB from another Redash4 DB</p>
<p>hanan@test:~<span class="math"> docker-compose stop
Stopping redash_nginx_1            ... done
Stopping redash_server_1           ... done
Stopping redash_adhoc_worker_1     ... done
Stopping redash_scheduled_worker_1 ... done
Stopping redash_scheduler_1        ... done
Stopping redash_postgres_1         ... done
Stopping redash_redis_1            ... done
hanan@test:~</span><br>
hanan@test:~<span class="math">
hanan@test:~</span><br>
hanan@test:~$ docker inspect --format ‘{{ .NetworkSettings.Networks.redash_default.IPAddress }}’ redash_postgres_1</p>
<h2>hanan@test:~<span class="math"> docker start redash_postgres_1
redash_postgres_1
hanan@test:~</span> docker inspect --format ‘{{ .NetworkSettings.Networks.redash_default.IPAddress }}’ redash_postgres_1<br>
172.18.0.2<br>
hanan@test:~$ psql -h 172.18.0.2 -U postgres postgres &lt; backup.sql<br>
Password for user postgres:<br>
SET<br>
SET<br>
SET<br>
SET<br>
SET<br>
SET<br>
SET<br>
SET<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
DROP TRIGGER<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
DROP INDEX<br>
ALTER TABLE<br>
ALTER TABLE<br>
ERROR:  cannot drop constraint users_pkey on table users because other objects depend on it<br>
DETAIL:  constraint favorites_user_id_fkey on table favorites depends on index users_pkey<br>
HINT:  Use DROP … CASCADE to drop the dependent objects too.<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ERROR:  cannot drop constraint organizations_pkey on table organizations because other objects depend on it<br>
DETAIL:  constraint favorites_org_id_fkey on table favorites depends on index organizations_pkey<br>
HINT:  Use DROP … CASCADE to drop the dependent objects too.<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
ERROR:  cannot drop table users because other objects depend on it<br>
DETAIL:  constraint favorites_user_id_fkey on table favorites depends on table users<br>
HINT:  Use DROP … CASCADE to drop the dependent objects too.<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
ERROR:  cannot drop table organizations because other objects depend on it<br>
DETAIL:  constraint favorites_org_id_fkey on table favorites depends on table organizations<br>
HINT:  Use DROP … CASCADE to drop the dependent objects too.<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP TABLE<br>
DROP SEQUENCE<br>
DROP TABLE<br>
DROP FUNCTION<br>
DROP EXTENSION<br>
ERROR:  cannot drop schema public because other objects depend on it<br>
DETAIL:  table organizations depends on schema public<br>
table users depends on schema public<br>
table favorites depends on schema public<br>
HINT:  Use DROP … CASCADE to drop the dependent objects too.<br>
COMMENT<br>
ERROR:  schema “public” already exists<br>
ALTER SCHEMA<br>
COMMENT<br>
CREATE EXTENSION<br>
COMMENT<br>
SET<br>
CREATE FUNCTION<br>
ALTER FUNCTION<br>
SET<br>
SET<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
ERROR:  relation “organizations” already exists<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
ERROR:  relation “users” already exists<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
CREATE TABLE<br>
ALTER TABLE<br>
CREATE SEQUENCE<br>
ALTER TABLE<br>
ALTER SEQUENCE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
COPY 0<br>
setval</h2>
<pre><code>  1
</code></pre>
<p>(1 row)</p>
<h2>COPY 1<br>
COPY 0<br>
setval</h2>
<pre><code>  1
</code></pre>
<p>(1 row)</p>
<h2>COPY 0<br>
setval</h2>
<pre><code>  1
</code></pre>
<p>(1 row)</p>
<h2>COPY 7<br>
setval</h2>
<pre><code>  7
</code></pre>
<p>(1 row)</p>
<h2>COPY 201<br>
setval</h2>
<pre><code>201
</code></pre>
<p>(1 row)</p>
<h2>COPY 18<br>
setval</h2>
<pre><code> 18
</code></pre>
<p>(1 row)</p>
<h2>COPY 2<br>
setval</h2>
<pre><code>  2
</code></pre>
<p>(1 row)</p>
<h2>COPY 1<br>
setval</h2>
<pre><code>  1
</code></pre>
<p>(1 row)</p>
<h2>COPY 28436<br>
setval</h2>
<p>28436<br>
(1 row)</p>
<h2>COPY 4<br>
setval</h2>
<pre><code>  4
</code></pre>
<p>(1 row)</p>
<h2>COPY 0<br>
setval</h2>
<pre><code>  1
</code></pre>
<p>(1 row)</p>
<h2>COPY 1<br>
setval</h2>
<pre><code>  1
</code></pre>
<p>(1 row)</p>
<h2>COPY 182<br>
setval</h2>
<pre><code>182
</code></pre>
<p>(1 row)</p>
<h2>COPY 349<br>
setval</h2>
<p>4666<br>
(1 row)</p>
<h2>COPY 0<br>
setval</h2>
<pre><code>  1
</code></pre>
<p>(1 row)</p>
<h2>COPY 39<br>
setval</h2>
<pre><code> 39
</code></pre>
<p>(1 row)</p>
<h2>COPY 247<br>
setval</h2>
<pre><code>258
</code></pre>
<p>(1 row)</p>
<h2>COPY 56<br>
setval</h2>
<pre><code> 69
</code></pre>
<p>(1 row)</p>
<p>ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ERROR:  multiple primary keys for table “organizations” are not allowed<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ERROR:  multiple primary keys for table “users” are not allowed<br>
ALTER TABLE<br>
ALTER TABLE<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE INDEX<br>
CREATE TRIGGER<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
ALTER TABLE<br>
REVOKE<br>
REVOKE<br>
GRANT<br>
GRANT</p>
<hr>
<p>server_1            | [2019-03-12 22:06:25,885] ERROR in app: Exception on / [GET]<br>
server_1            | Traceback (most recent call last):<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1988, in wsgi_app<br>
server_1            |     response = self.full_dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1641, in full_dispatch_request<br>
server_1            |     rv = self.handle_user_exception(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_restful/<strong>init</strong>.py”, line 271, in error_router<br>
server_1            |     return original_handler(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1544, in handle_user_exception<br>
server_1            |     reraise(exc_type, exc_value, tb)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1639, in full_dispatch_request<br>
server_1            |     rv = self.dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1625, in dispatch_request<br>
server_1            |     return self.view_functions<a>rule.endpoint</a><br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 226, in decorated_view<br>
server_1            |     elif not current_user.is_authenticated:<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 343, in <strong>getattr</strong><br>
server_1            |     return getattr(self._get_current_object(), name)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 302, in _get_current_object<br>
server_1            |     return self.__local()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 26, in <br>
server_1            |     current_user = LocalProxy(lambda: _get_user())<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 302, in _get_user<br>
server_1            |     current_app.login_manager._load_user()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 311, in _load_user<br>
server_1            |     return self._load_from_cookie(request.cookies[cookie_name])<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 350, in _load_from_cookie<br>
server_1            |     self.reload_user()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 279, in reload_user<br>
server_1            |     user = self.user_callback(user_id)<br>
server_1            |   File “/app/redash/authentication/<strong>init</strong>.py”, line 46, in load_user<br>
server_1            |     user = models.User.get_by_id_and_org(user_id, org)<br>
server_1            |   File “/app/redash/models.py”, line 250, in get_by_id_and_org<br>
server_1            |     return db.session.query(cls).filter(cls.id == object_id, <a href="http://cls.org" rel="nofollow noopener">cls.org</a> == org).one()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2884, in one<br>
server_1            |     ret = self.one_or_none()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2854, in one_or_none<br>
server_1            |     ret = list(self)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2925, in <strong>iter</strong><br>
server_1            |     return self._execute_and_instances(context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2948, in _execute_and_instances<br>
server_1            |     result = conn.execute(querycontext.statement, self._params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 948, in execute<br>
server_1            |     return meth(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/elements.py”, line 269, in _execute_on_connection<br>
server_1            |     return connection._execute_clauseelement(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1060, in _execute_clauseelement<br>
server_1            |     compiled_sql, distilled_params<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1200, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1413, in _handle_dbapi_exception<br>
server_1            |     exc_info<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/util/compat.py”, line 203, in raise_from_cause<br>
server_1            |     reraise(type(exception), exception, tb=exc_tb, cause=cause)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1193, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/default.py”, line 507, in do_execute<br>
server_1            |     cursor.execute(statement, parameters)<br>
server_1            | ProgrammingError: (psycopg2.ProgrammingError) column users.disabled_at does not exist<br>
server_1            | LINE 1: …rs_password_hash, users.api_key AS users_api_key, users.disa…<br>
server_1            |                                                              ^<br>
server_1            |  [SQL: ‘SELECT users.profile_image_url AS users_profile_image_url, users.groups AS users_groups, users.updated_at AS users_updated_at, users.created_at AS users_created_at, users.id AS users_id, users.org_id AS users_org_id, users.name AS users_name, users.email AS users_email, users.password_hash AS users_password_hash, users.api_key AS users_api_key, users.disabled_at AS users_disabled_at \nFROM users \nWHERE users.id = %(id_1)s AND %(param_1)s = users.org_id’] [parameters: {‘id_1’: u’1’, ‘param_1’: 1}] (Background on this error at: <a href="http://sqlalche.me/e/f405" rel="nofollow noopener">http://sqlalche.me/e/f405</a>)<br>
server_1            | [2019-03-12 22:06:25,885][PID:19][ERROR][redash] Exception on / [GET]<br>
server_1            | Traceback (most recent call last):<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1988, in wsgi_app<br>
server_1            |     response = self.full_dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1641, in full_dispatch_request<br>
server_1            |     rv = self.handle_user_exception(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_restful/<strong>init</strong>.py”, line 271, in error_router<br>
server_1            |     return original_handler(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1544, in handle_user_exception<br>
server_1            |     reraise(exc_type, exc_value, tb)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1639, in full_dispatch_request<br>
server_1            |     rv = self.dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1625, in dispatch_request<br>
server_1            |     return self.view_functions<a>rule.endpoint</a><br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 226, in decorated_view<br>
server_1            |     elif not current_user.is_authenticated:<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 343, in <strong>getattr</strong><br>
server_1            |     return getattr(self._get_current_object(), name)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 302, in _get_current_object<br>
server_1            |     return self.__local()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 26, in <br>
server_1            |     current_user = LocalProxy(lambda: _get_user())<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 302, in _get_user<br>
server_1            |     current_app.login_manager._load_user()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 311, in _load_user<br>
server_1            |     return self._load_from_cookie(request.cookies[cookie_name])<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 350, in _load_from_cookie<br>
server_1            |     self.reload_user()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 279, in reload_user<br>
server_1            |     user = self.user_callback(user_id)<br>
server_1            |   File “/app/redash/authentication/<strong>init</strong>.py”, line 46, in load_user<br>
server_1            |     user = models.User.get_by_id_and_org(user_id, org)<br>
server_1            |   File “/app/redash/models.py”, line 250, in get_by_id_and_org<br>
server_1            |     return db.session.query(cls).filter(cls.id == object_id, <a href="http://cls.org" rel="nofollow noopener">cls.org</a> == org).one()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2884, in one<br>
server_1            |     ret = self.one_or_none()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2854, in one_or_none<br>
server_1            |     ret = list(self)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2925, in <strong>iter</strong><br>
server_1            |     return self._execute_and_instances(context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2948, in _execute_and_instances<br>
server_1            |     result = conn.execute(querycontext.statement, self._params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 948, in execute<br>
server_1            |     return meth(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/elements.py”, line 269, in _execute_on_connection<br>
server_1            |     return connection._execute_clauseelement(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1060, in _execute_clauseelement<br>
server_1            |     compiled_sql, distilled_params<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1200, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1413, in _handle_dbapi_exception<br>
server_1            |     exc_info<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/util/compat.py”, line 203, in raise_from_cause<br>
server_1            |     reraise(type(exception), exception, tb=exc_tb, cause=cause)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1193, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/default.py”, line 507, in do_execute<br>
server_1            |     cursor.execute(statement, parameters)<br>
server_1            | ProgrammingError: (psycopg2.ProgrammingError) column users.disabled_at does not exist<br>
server_1            | LINE 1: …rs_password_hash, users.api_key AS users_api_key, users.disa…</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_14' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/hananv'><span itemprop='name'>hananv</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2019-03-13T06:04:16Z' class='post-time'>
                    March 13, 2019,  6:04am
                  </time>
                  <meta itemprop='dateModified' content='2019-03-13T06:04:16Z'>
              <span itemprop='position'>14</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <hr>
<p>erver_1            | [2019-03-13 05:40:53,080] ERROR in app: Exception on /login [GET]<br>
server_1            | Traceback (most recent call last):<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1988, in wsgi_app<br>
server_1            |     response = self.full_dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1641, in full_dispatch_request<br>
server_1            |     rv = self.handle_user_exception(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_restful/<strong>init</strong>.py”, line 271, in error_router<br>
server_1            |     return original_handler(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1544, in handle_user_exception<br>
server_1            |     reraise(exc_type, exc_value, tb)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1639, in full_dispatch_request<br>
server_1            |     rv = self.dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1625, in dispatch_request<br>
server_1            |     return self.view_functions<a>rule.endpoint</a><br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_limiter/extension.py”, line 442, in __inner<br>
server_1            |     return obj(*a, **k)<br>
server_1            |   File “/app/redash/handlers/authentication.py”, line 104, in login<br>
server_1            |     if current_org == None and not settings.MULTI_ORG:<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 365, in <br>
server_1            |     <strong>eq</strong> = lambda x, o: x._get_current_object() == o<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 302, in _get_current_object<br>
server_1            |     return self.__local()<br>
server_1            |   File “/app/redash/authentication/org_resolving.py”, line 14, in _get_current_org<br>
server_1            |     <a href="http://g.org" rel="nofollow noopener">g.org</a> = Organization.get_by_slug(slug)<br>
server_1            |   File “/app/redash/models.py”, line 325, in get_by_slug<br>
server_1            |     return cls.query.filter(cls.slug == slug).first()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2825, in first<br>
server_1            |     ret = list(self[0:1])<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2617, in <strong>getitem</strong><br>
server_1            |     return list(res)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2925, in <strong>iter</strong><br>
server_1            |     return self._execute_and_instances(context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2948, in _execute_and_instances<br>
server_1            |     result = conn.execute(querycontext.statement, self._params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 948, in execute<br>
server_1            |     return meth(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/elements.py”, line 269, in _execute_on_connection<br>
server_1            |     return connection._execute_clauseelement(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1060, in _execute_clauseelement<br>
server_1            |     compiled_sql, distilled_params<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1200, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1413, in _handle_dbapi_exception<br>
server_1            |     exc_info<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/util/compat.py”, line 203, in raise_from_cause<br>
server_1            |     reraise(type(exception), exception, tb=exc_tb, cause=cause)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1193, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/default.py”, line 507, in do_execute<br>
server_1            |     cursor.execute(statement, parameters)<br>
server_1            | OperationalError: (psycopg2.OperationalError) server closed the connection unexpectedly<br>
server_1            |   This probably means the server terminated abnormally<br>
server_1            |   before or while processing the request.<br>
server_1            |  [SQL: ‘SELECT organizations.updated_at AS organizations_updated_at, organizations.created_at AS organizations_created_at, organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.slug AS organizations_slug, organizations.settings AS organizations_settings \nFROM organizations \nWHERE organizations.slug = %(slug_1)s \n LIMIT %(param_1)s’] [parameters: {‘slug_1’: ‘default’, ‘param_1’: 1}] (Background on this error at: <a href="http://sqlalche.me/e/e3q8" rel="nofollow noopener">http://sqlalche.me/e/e3q8</a>)<br>
server_1            | [2019-03-13 05:40:53,080][PID:13][ERROR][redash] Exception on /login [GET]<br>
server_1            | Traceback (most recent call last):<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1988, in wsgi_app<br>
server_1            |     response = self.full_dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1641, in full_dispatch_request<br>
server_1            |     rv = self.handle_user_exception(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_restful/<strong>init</strong>.py”, line 271, in error_router<br>
server_1            |     return original_handler(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1544, in handle_user_exception<br>
server_1            |     reraise(exc_type, exc_value, tb)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1639, in full_dispatch_request<br>
server_1            |     rv = self.dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1625, in dispatch_request<br>
server_1            |     return self.view_functions<a>rule.endpoint</a><br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_limiter/extension.py”, line 442, in __inner<br>
server_1            |     return obj(*a, **k)<br>
server_1            |   File “/app/redash/handlers/authentication.py”, line 104, in login<br>
server_1            |     if current_org == None and not settings.MULTI_ORG:<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 365, in <br>
server_1            |     <strong>eq</strong> = lambda x, o: x._get_current_object() == o<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 302, in _get_current_object<br>
server_1            |     return self.__local()<br>
server_1            |   File “/app/redash/authentication/org_resolving.py”, line 14, in _get_current_org<br>
server_1            |     <a href="http://g.org" rel="nofollow noopener">g.org</a> = Organization.get_by_slug(slug)<br>
server_1            |   File “/app/redash/models.py”, line 325, in get_by_slug<br>
server_1            |     return cls.query.filter(cls.slug == slug).first()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2825, in first<br>
server_1            |     ret = list(self[0:1])<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2617, in <strong>getitem</strong><br>
server_1            |     return list(res)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2925, in <strong>iter</strong><br>
server_1            |     return self._execute_and_instances(context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2948, in _execute_and_instances<br>
server_1            |     result = conn.execute(querycontext.statement, self._params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 948, in execute<br>
server_1            |     return meth(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/elements.py”, line 269, in _execute_on_connection<br>
server_1            |     return connection._execute_clauseelement(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1060, in _execute_clauseelement<br>
server_1            |     compiled_sql, distilled_params<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1200, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1413, in _handle_dbapi_exception<br>
server_1            |     exc_info<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/util/compat.py”, line 203, in raise_from_cause<br>
server_1            |     reraise(type(exception), exception, tb=exc_tb, cause=cause)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1193, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/default.py”, line 507, in do_execute<br>
server_1            |     cursor.execute(statement, parameters)<br>
server_1            | OperationalError: (psycopg2.OperationalError) server closed the connection unexpectedly<br>
server_1            |   This probably means the server terminated abnormally<br>
server_1            |   before or while processing the request.<br>
server_1            |  [SQL: ‘SELECT organizations.updated_at AS organizations_updated_at, organizations.created_at AS organizations_created_at, organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.slug AS organizations_slug, organizations.settings AS organizations_settings \nFROM organizations \nWHERE organizations.slug = %(slug_1)s \n LIMIT %(param_1)s’] [parameters: {‘slug_1’: ‘default’, ‘param_1’: 1}] (Background on this error at: <a href="http://sqlalche.me/e/e3q8" rel="nofollow noopener">http://sqlalche.me/e/e3q8</a>)<br>
server_1            | [2019-03-13 05:40:53,092][PID:13][INFO][metrics] method=GET path=/login endpoint=redash_login status=500 content_type=? content_length=-1 duration=17.29 query_count=0 query_duration=0.00<br>
server_1            | [2019-03-13 05:40:53,666] ERROR in app: Exception on /favicon.ico [GET]<br>
server_1            | Traceback (most recent call last):<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1988, in wsgi_app<br>
server_1            |     response = self.full_dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1641, in full_dispatch_request<br>
server_1            |     rv = self.handle_user_exception(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_restful/<strong>init</strong>.py”, line 271, in error_router<br>
server_1            |     return original_handler(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1544, in handle_user_exception<br>
server_1            |     reraise(exc_type, exc_value, tb)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1639, in full_dispatch_request<br>
server_1            |     rv = self.dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1625, in dispatch_request<br>
server_1            |     return self.view_functions<a>rule.endpoint</a><br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 226, in decorated_view<br>
server_1            |     elif not current_user.is_authenticated:<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 343, in <strong>getattr</strong><br>
server_1            |     return getattr(self._get_current_object(), name)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 302, in _get_current_object<br>
server_1            |     return self.__local()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 26, in <br>
server_1            |     current_user = LocalProxy(lambda: _get_user())<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 302, in _get_user<br>
server_1            |     current_app.login_manager._load_user()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 317, in _load_user<br>
server_1            |     return self.reload_user()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 279, in reload_user<br>
server_1            |     user = self.user_callback(user_id)<br>
server_1            |   File “/app/redash/authentication/<strong>init</strong>.py”, line 44, in load_user<br>
server_1            |     org = current_org._get_current_object()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 302, in _get_current_object<br>
server_1            |     return self.__local()<br>
server_1            |   File “/app/redash/authentication/org_resolving.py”, line 14, in _get_current_org<br>
server_1            |     <a href="http://g.org" rel="nofollow noopener">g.org</a> = Organization.get_by_slug(slug)<br>
server_1            |   File “/app/redash/models.py”, line 325, in get_by_slug<br>
server_1            |     return cls.query.filter(cls.slug == slug).first()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2825, in first<br>
server_1            |     ret = list(self[0:1])<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2617, in <strong>getitem</strong><br>
server_1            |     return list(res)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2925, in <strong>iter</strong><br>
server_1            |     return self._execute_and_instances(context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2948, in _execute_and_instances<br>
server_1            |     result = conn.execute(querycontext.statement, self._params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 948, in execute<br>
server_1            |     return meth(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/elements.py”, line 269, in _execute_on_connection<br>
server_1            |     return connection._execute_clauseelement(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1060, in _execute_clauseelement<br>
server_1            |     compiled_sql, distilled_params<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1200, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1413, in _handle_dbapi_exception<br>
server_1            |     exc_info<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/util/compat.py”, line 203, in raise_from_cause<br>
server_1            |     reraise(type(exception), exception, tb=exc_tb, cause=cause)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1193, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/default.py”, line 507, in do_execute<br>
server_1            |     cursor.execute(statement, parameters)<br>
server_1            | OperationalError: (psycopg2.OperationalError) server closed the connection unexpectedly<br>
server_1            |   This probably means the server terminated abnormally<br>
server_1            |   before or while processing the request.<br>
server_1            |  [SQL: ‘SELECT organizations.updated_at AS organizations_updated_at, organizations.created_at AS organizations_created_at, organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.slug AS organizations_slug, organizations.settings AS organizations_settings \nFROM organizations \nWHERE organizations.slug = %(slug_1)s \n LIMIT %(param_1)s’] [parameters: {‘slug_1’: ‘default’, ‘param_1’: 1}] (Background on this error at: <a href="http://sqlalche.me/e/e3q8" rel="nofollow noopener">http://sqlalche.me/e/e3q8</a>)<br>
server_1            | [2019-03-13 05:40:53,666][PID:19][ERROR][redash] Exception on /favicon.ico [GET]<br>
server_1            | Traceback (most recent call last):<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1988, in wsgi_app<br>
server_1            |     response = self.full_dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1641, in full_dispatch_request<br>
server_1            |     rv = self.handle_user_exception(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_restful/<strong>init</strong>.py”, line 271, in error_router<br>
server_1            |     return original_handler(e)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1544, in handle_user_exception<br>
server_1            |     reraise(exc_type, exc_value, tb)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1639, in full_dispatch_request<br>
server_1            |     rv = self.dispatch_request()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask/app.py”, line 1625, in dispatch_request<br>
server_1            |     return self.view_functions<a>rule.endpoint</a><br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 226, in decorated_view<br>
server_1            |     elif not current_user.is_authenticated:<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 343, in <strong>getattr</strong><br>
server_1            |     return getattr(self._get_current_object(), name)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 302, in _get_current_object<br>
server_1            |     return self.__local()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 26, in <br>
server_1            |     current_user = LocalProxy(lambda: _get_user())<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/utils.py”, line 302, in _get_user<br>
server_1            |     current_app.login_manager._load_user()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 317, in _load_user<br>
server_1            |     return self.reload_user()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/flask_login/login_manager.py”, line 279, in reload_user<br>
server_1            |     user = self.user_callback(user_id)<br>
server_1            |   File “/app/redash/authentication/<strong>init</strong>.py”, line 44, in load_user<br>
server_1            |     org = current_org._get_current_object()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/werkzeug/local.py”, line 302, in _get_current_object<br>
server_1            |     return self.__local()<br>
server_1            |   File “/app/redash/authentication/org_resolving.py”, line 14, in _get_current_org<br>
server_1            |     <a href="http://g.org" rel="nofollow noopener">g.org</a> = Organization.get_by_slug(slug)<br>
server_1            |   File “/app/redash/models.py”, line 325, in get_by_slug<br>
server_1            |     return cls.query.filter(cls.slug == slug).first()<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2825, in first<br>
server_1            |     ret = list(self[0:1])<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2617, in <strong>getitem</strong><br>
server_1            |     return list(res)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2925, in <strong>iter</strong><br>
server_1            |     return self._execute_and_instances(context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/orm/query.py”, line 2948, in _execute_and_instances<br>
server_1            |     result = conn.execute(querycontext.statement, self._params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 948, in execute<br>
server_1            |     return meth(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/elements.py”, line 269, in _execute_on_connection<br>
server_1            |     return connection._execute_clauseelement(self, multiparams, params)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1060, in _execute_clauseelement<br>
server_1            |     compiled_sql, distilled_params<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1200, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1413, in _handle_dbapi_exception<br>
server_1            |     exc_info<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/util/compat.py”, line 203, in raise_from_cause<br>
server_1            |     reraise(type(exception), exception, tb=exc_tb, cause=cause)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py”, line 1193, in _execute_context<br>
server_1            |     context)<br>
server_1            |   File “/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/default.py”, line 507, in do_execute<br>
server_1            |     cursor.execute(statement, parameters)<br>
server_1            | OperationalError: (psycopg2.OperationalError) server closed the connection unexpectedly<br>
server_1            |   This probably means the server terminated abnormally</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_15' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/hananv'><span itemprop='name'>hananv</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2019-03-13T06:04:36Z' class='post-time'>
                    March 13, 2019,  6:04am
                  </time>
                  <meta itemprop='dateModified' content='2019-03-13T06:04:36Z'>
              <span itemprop='position'>15</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>postgres_1          | ERROR:  column queries.tags does not exist at character 840<br>
postgres_1          | STATEMENT:  SELECT queries.query AS queries_query, queries.updated_at AS queries_updated_at, queries.created_at AS queries_created_at, queries.id AS queries_id, queries.version AS queries_version, queries.org_id AS queries_org_id, queries.data_source_id AS queries_data_source_id, queries.latest_query_data_id AS queries_latest_query_data_id, queries.name AS queries_name, queries.description AS queries_description, queries.query_hash AS queries_query_hash, queries.api_key AS queries_api_key, queries.user_id AS queries_user_id, queries.last_modified_by_id AS queries_last_modified_by_id, queries.is_archived AS queries_is_archived, queries.is_draft AS queries_is_draft, queries.schedule AS queries_schedule, queries.schedule_failures AS queries_schedule_failures, queries.options AS queries_options, queries.search_vector AS queries_search_vector, queries.tags AS queries_tags, query_results_1.id AS query_results_1_id, query_results_1.retrieved_at AS query_results_1_retrieved_at<br>
postgres_1          |   FROM queries LEFT OUTER JOIN query_results AS query_results_1 ON query_results_1.id = queries.latest_query_data_id<br>
postgres_1          |   WHERE queries.schedule IS NOT NULL ORDER BY queries.id<br>
postgres_1          | ERROR:  column users.disabled_at does not exist at character 348<br>
postgres_1          | STATEMENT:  SELECT users.profile_image_url AS users_profile_image_url, users.groups AS users_groups, users.updated_at AS users_updated_at, users.created_at AS users_created_at, users.id AS users_id, users.org_id AS users_org_id, users.name AS users_name, users.email AS users_email, users.password_hash AS users_password_hash, users.api_key AS users_api_key, users.disabled_at AS users_disabled_at<br>
postgres_1          |   FROM users<br>
postgres_1          |   WHERE users.id = ‘1’ AND 1 = users.org_id<br>
postgres_1          | ERROR:  column users.disabled_at does not exist at character 348<br>
postgres_1          | STATEMENT:  SELECT users.profile_image_url AS users_profile_image_url, users.groups AS users_groups, users.updated_at AS users_updated_at, users.created_at AS users_created_at, users.id AS users_id, users.org_id AS users_org_id, users.name AS users_name, users.email AS users_email, users.password_hash AS users_password_hash, users.api_key AS users_api_key, users.disabled_at AS users_disabled_at<br>
postgres_1          |   FROM users<br>
postgres_1          |   WHERE users.id = ‘1’ AND 1 = users.org_id<br>
postgres_1          | ERROR:  column queries.tags does not exist at character 840<br>
postgres_1          | STATEMENT:  SELECT queries.query AS queries_query, queries.updated_at AS queries_updated_at, queries.created_at AS queries_created_at, queries.id AS queries_id, queries.version AS queries_version, queries.org_id AS queries_org_id, queries.data_source_id AS queries_data_source_id, queries.latest_query_data_id AS queries_latest_query_data_id, queries.name AS queries_name, queries.description AS queries_description, queries.query_hash AS queries_query_hash, queries.api_key AS queries_api_key, queries.user_id AS queries_user_id, queries.last_modified_by_id AS queries_last_modified_by_id, queries.is_archived AS queries_is_archived, queries.is_draft AS queries_is_draft, queries.schedule AS queries_schedule, queries.schedule_failures AS queries_schedule_failures, queries.options AS queries_options, queries.search_vector AS queries_search_vector, queries.tags AS queries_tags, query_results_1.id AS query_results_1_id, query_results_1.retrieved_at AS query_results_1_retrieved_at<br>
postgres_1          |   FROM queries LEFT OUTER JOIN query_results AS query_results_1 ON query_results_1.id = queries.latest_query_data_id<br>
postgres_1          |   WHERE queries.schedule IS NOT NULL ORDER BY queries.id<br>
postgres_1          | ERROR:  column queries.tags does not exist at character 840<br>
postgres_1          | STATEMENT:  SELECT queries.query AS queries_query, queries.updated_at AS queries_updated_at, queries.created_at AS queries_created_at, queries.id AS queries_id, queries.version AS queries_version, queries.org_id AS queries_org_id, queries.data_source_id AS queries_data_source_id, queries.latest_query_data_id AS queries_latest_query_data_id, queries.name AS queries_name, queries.description AS queries_description, queries.query_hash AS queries_query_hash, queries.api_key AS queries_api_key, queries.user_id AS queries_user_id, queries.last_modified_by_id AS queries_last_modified_by_id, queries.is_archived AS queries_is_archived, queries.is_draft AS queries_is_draft, queries.schedule AS queries_schedule, queries.schedule_failures AS queries_schedule_failures, queries.options AS queries_options, queries.search_vector AS queries_search_vector, queries.tags AS queries_tags, query_results_1.id AS query_results_1_id, query_results_1.retrieved_at AS query_results_1_retrieved_at<br>
postgres_1          |   FROM queries LEFT OUTER JOIN query_results AS query_results_1 ON query_results_1.id = queries.latest_query_data_id<br>
postgres_1          |   WHERE queries.schedule IS NOT NULL ORDER BY queries.id<br>
postgres_1          | ERROR:  column queries.tags does not exist at character 840<br>
postgres_1          | STATEMENT:  SELECT queries.query AS queries_query, queries.updated_at AS queries_updated_at, queries.created_at AS queries_created_at, queries.id AS queries_id, queries.version AS queries_version, queries.org_id AS queries_org_id, queries.data_source_id AS queries_data_source_id, queries.latest_query_data_id AS queries_latest_query_data_id, queries.name AS queries_name, queries.description AS queries_description, queries.query_hash AS queries_query_hash, queries.api_key AS queries_api_key, queries.user_id AS queries_user_id, queries.last_modified_by_id AS queries_last_modified_by_id, queries.is_archived AS queries_is_archived, queries.is_draft AS queries_is_draft, queries.schedule AS queries_schedule, queries.schedule_failures AS queries_schedule_failures, queries.options AS queries_options, queries.search_vector AS queries_search_vector, queries.tags AS queries_tags, query_results_1.id AS query_results_1_id, query_results_1.retrieved_at AS query_results_1_retrieved_at<br>
postgres_1          |   FROM queries LEFT OUTER JOIN query_results AS query_results_1 ON query_results_1.id = queries.latest_query_data_id<br>
postgres_1          |   WHERE queries.schedule IS NOT NULL ORDER BY queries.id<br>
postgres_1          | ERROR:  column queries.tags does not exist at character 840</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="1" />
              </div>

                <div class='crawler-linkback-list' itemscope itemtype='http://schema.org/ItemList'>
                      <div itemprop='itemListElement' itemscope itemtype='http://schema.org/ListItem'>
                        <a itemprop='url' href="http://discuss.redash.io/t/invalidtoken-error-after-migrating-to-new-rds-backend/4185">InvalidToken error after migrating to new rds backend</a>
                        <meta itemprop='position' content='1'>
                      </div>
                </div>
          </div>
          <div id='post_16' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/justinclift'><span itemprop='name'>justinclift</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2019-03-13T07:45:04Z' class='post-time'>
                    March 13, 2019,  7:45am
                  </time>
                  <meta itemprop='dateModified' content='2019-03-13T07:45:04Z'>
              <span itemprop='position'>16</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Ahhh, that’s interesting.  It looks like the SQL commands in the backup aren’t using CASCADE properly, and that’s causing problems.  Looks like an alternative approach to backing up is probably needed. <img src="https://emoji.discourse-cdn.com/twitter/smile.png?v=6" title=":smile:" class="emoji" alt=":smile:"></p>
<p>An important thing I noticed after writing down the steps I first used… is that the PostgreSQL database is actually created in a standard directory (for me, it’s <code>/opt/redash/postgres-data</code>), outside of the Docker containers.  When the Docker PostgreSQL container starts, it mounts that directory into itself and reads/writes data there.</p>
<p>So, a much easier approach to backup the database is to shut down the Docker containers, then copy that <code>/opt/redash/postgres-data</code> directory somewhere safe.  That’ll be your backup. <img src="https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>To copy the old Redash4 database across to your newer Redash 6 installation, I’d do this:</p>
<ol>
<li>Make a backup of your Redash4 database for safety (eg in case something goes wrong)
<ul>
<li>On the Redash 4 server: <code>rsync -aP /opt/redash/postgres-data /somewhere/safe</code>
</li>
</ul>
</li>
<li>Make a backup of your Redash6 database for safety (again, in case something goes wrong)
<ul>
<li>On the Redash 6 server: <code>rsync -aP /opt/redash/postgres-data /somewhere/else/safe</code>
</li>
</ul>
</li>
<li>Delete the Redash6 database directory (<code>/opt/redash/postgres-data</code>)
<ul>
<li>On the Redash 6 server: <code>rm -rf /opt/redash/postgres-data</code>
</li>
</ul>
</li>
<li>Copy the Redash 4 database to the Redash 6 server
<ul>
<li>The command really depends where you’ve put stuff. <img src="https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:">
</li>
</ul>
</li>
<li>Upgrade the Redash 4 database to Redash 6
<ul>
<li>On the Redash 6 server: <code>docker-compose run --rm server manage db upgrade</code>
</li>
<li>(that’s copied from the <a href="https://redash.io/help/open-source/admin-guide/how-to-upgrade" rel="nofollow noopener">How to Upgrade</a> page.</li>
</ul>
</li>
</ol>
<p>That’s the concept I’m thinking of anyway.  Make sure you backup everything first, (etc) and have read the How to Upgrade page before you try it.</p>
<p>Does it make sense so far? <img src="https://emoji.discourse-cdn.com/twitter/smile.png?v=6" title=":smile:" class="emoji" alt=":smile:"></p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="1" />
              </div>

          </div>
          <div id='post_17' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/leolle'><span itemprop='name'>leolle</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2020-01-02T03:04:47Z' class='post-time'>
                    January 2, 2020,  3:04am
                  </time>
                  <meta itemprop='dateModified' content='2020-01-02T03:04:47Z'>
              <span itemprop='position'>17</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Hi, did you figure it out back&amp;restore via the sql file method?</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

                <div class='crawler-linkback-list' itemscope itemtype='http://schema.org/ItemList'>
                      <div itemprop='itemListElement' itemscope itemtype='http://schema.org/ListItem'>
                        <a itemprop='url' href="http://discuss.redash.io/t/how-to-backup-restore-redash-completely/8649/7">How to backup/restore Redash completely?</a>
                        <meta itemprop='position' content='1'>
                      </div>
                </div>
          </div>
          <div id='post_18' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/yaj1245'><span itemprop='name'>yaj1245</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2020-07-12T02:44:15Z' class='post-time'>
                    July 12, 2020,  2:44am
                  </time>
                  <meta itemprop='dateModified' content='2020-07-12T02:44:15Z'>
              <span itemprop='position'>18</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Can anyone please provide a documentation for connecting postgres via VM? I couldn’t seem to find any docs. Thank you</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="1" />
              <span class='post-likes'>1 Like</span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_19' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/matt.au'><span itemprop='name'>matt.au</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/backing-up-all-data-on-my-own-hosted-redash/2535">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2022-04-13T14:20:14Z' class='post-time'>
                    April 13, 2022,  2:20pm
                  </time>
                  <meta itemprop='dateModified' content='2022-04-13T14:20:14Z'>
              <span itemprop='position'>19</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>I needed to move my hosted redash server from one cloud platform to another, and since they were different platforms, snapshots didn’t work.  I followed <a class="mention" href="/u/justinclift">@justinclift</a> directions, and it worked for me.   Here are my steps:</p>
<ol>
<li>start a fresh instance of redash on a new server.  (I used the official AMI from redash)</li>
<li>shutdown all the docker containers on this server.</li>
<li>shutdown all the docker containers on the old redash server, and zip up /opt/redash.  I zip up /opt/redash and not just /opt/redash/postgres-data because I want to copy all my settings in the /opt/redash/env file to the new server as well, as it contains many important configuration such as the REDASH_SECRET_KEY</li>
<li>copy over the zip file and replace /opt/redash with its content</li>
<li>start redash containers with: docker-compose up -d</li>
</ol>
<p>I find this method much better than dumping the postgres database, which didn’t work well for me.  This upgrades my fresh instance to the redash version I was running, since the zip file included the docker-compose.yml from my old server, and the AMI version was running an older version.</p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="3" />
              <span class='post-likes'>3 Likes</span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
    </div>






    </div>
    <footer class="container wrap">
  <nav class='crawler-nav'>
    <ul>
      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
        <span itemprop='name'>
          <a href='/' itemprop="url">Home </a>
        </span>
      </li>
      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
        <span itemprop='name'>
          <a href='/categories' itemprop="url">Categories </a>
        </span>
      </li>
      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
        <span itemprop='name'>
          <a href='/guidelines' itemprop="url">FAQ/Guidelines </a>
        </span>
      </li>
        <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
          <span itemprop='name'>
            <a href='http://redash.io/terms.html' itemprop="url">Terms of Service </a>
          </span>
        </li>
        <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
          <span itemprop='name'>
            <a href='http://redash.io/privacy.html' itemprop="url">Privacy Policy </a>
          </span>
        </li>
    </ul>
  </nav>
  <p class='powered-by-link'>Powered by <a href="https://www.discourse.org">Discourse</a>, best viewed with JavaScript enabled</p>
</footer>

    
    
  </body>
  
</html>
