<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Can I specify data source when querying for results using the official python library?</title>
    <link>https://discuss.redash.io/t/can-i-specify-data-source-when-querying-for-results-using-the-official-python-library/10695</link>
    <description>Hello!

I&#39;m utilizing the redash-toolbelt python library to kick off a query and get refreshed results along with parameters however ever since we started using cached queries (and changing the data source to &quot;Query Results&quot; in the UI) my requests just end up with &quot;Query Execution Failed&quot;. 

Do I need to change or specify the new data source? Does the API support queries utilizing cached queries? Am I doing something else wrong? 

Any help is really appreciated!

Cheers,

-Tim</description>
    
    <lastBuildDate>Sat, 02 Jul 2022 19:10:41 +0000</lastBuildDate>
    <category>Support</category>
    <atom:link href="https://discuss.redash.io/t/can-i-specify-data-source-when-querying-for-results-using-the-official-python-library/10695.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Can I specify data source when querying for results using the official python library?</title>
        <dc:creator><![CDATA[jesse]]></dc:creator>
        <description><![CDATA[
            <p>Hi there and welcome to the forum!</p>
<p>It’s not clear what you’re trying to accomplish here. Can you provide more detail about exactly what changed to make query executions fail?</p>
<p>For background: <code>redash-toolbelt</code> simply uses the same API as the Redash webapp. This means that <em>anything you can do in the Redash web app you can accomplish with <code>redash-toolbelt</code> also</em>. The QRDS allows querying of cached queries as well.</p>
          <p><a href="https://discuss.redash.io/t/can-i-specify-data-source-when-querying-for-results-using-the-official-python-library/10695/2">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.redash.io/t/can-i-specify-data-source-when-querying-for-results-using-the-official-python-library/10695/2</link>
        <pubDate>Sat, 02 Jul 2022 19:10:41 +0000</pubDate>
        <guid isPermaLink="false">discuss.redash.io-post-10695-2</guid>
        <source url="https://discuss.redash.io/t/can-i-specify-data-source-when-querying-for-results-using-the-official-python-library/10695.rss">Can I specify data source when querying for results using the official python library?</source>
      </item>
      <item>
        <title>Can I specify data source when querying for results using the official python library?</title>
        <dc:creator><![CDATA[tmurphy821]]></dc:creator>
        <description><![CDATA[
            <p>Hello!</p>
<p>I’m utilizing the redash-toolbelt python library to kick off a query and get refreshed results along with parameters however ever since we started using cached queries (and changing the data source to “Query Results” in the UI) my requests just end up with “Query Execution Failed”.</p>
<p>Do I need to change or specify the new data source? Does the API support queries utilizing cached queries? Am I doing something else wrong?</p>
<p>Any help is really appreciated!</p>
<p>Cheers,</p>
<p>-Tim</p>
          <p><a href="https://discuss.redash.io/t/can-i-specify-data-source-when-querying-for-results-using-the-official-python-library/10695/1">Read full topic</a></p>
        ]]></description>
        <link>https://discuss.redash.io/t/can-i-specify-data-source-when-querying-for-results-using-the-official-python-library/10695/1</link>
        <pubDate>Wed, 29 Jun 2022 23:56:32 +0000</pubDate>
        <guid isPermaLink="false">discuss.redash.io-post-10695-1</guid>
        <source url="https://discuss.redash.io/t/can-i-specify-data-source-when-querying-for-results-using-the-official-python-library/10695.rss">Can I specify data source when querying for results using the official python library?</source>
      </item>
  </channel>
</rss>
