<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Duplicate dashbord with different queries from different table in same data source - Usage Support - Redash Discourse</title>
    <meta name="description" content="I have a dashboard that I want to use as a template for new dashboards, I figured a workflow like below should do the trick 

get template dashboard data as json
create new empty dashboard
for each widget in the dashboar&amp;hellip;">
    <meta name="generator" content="Discourse 3.2.0.beta2-dev - https://github.com/discourse/discourse version 83621ccbe797223b48b624b00ef04f24672e1f03">
<link rel="icon" type="image/png" href="https://global.discourse-cdn.com/standard17/uploads/redash1/optimized/1X/01e20869afc0877e3e5aee0f94419b9e9bffa961_2_32x32.ico">
<link rel="apple-touch-icon" type="image/png" href="https://global.discourse-cdn.com/standard17/uploads/redash1/optimized/1X/e1838a8a0c506503a22e0c60e2334374b2895c87_2_180x180.png">
<meta name="theme-color" media="all" content="#ffffff">

<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes, viewport-fit=cover">
<link rel="canonical" href="https://discuss.redash.io/t/duplicate-dashbord-with-different-queries-from-different-table-in-same-data-source/10454" />

<link rel="search" type="application/opensearchdescription+xml" href="https://discuss.redash.io/opensearch.xml" title="Redash Discourse Search">

    <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/color_definitions_base__2_8fd59ae1f286f43b3ff17996df07ea951685249d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" class="light-scheme"/>

  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/desktop_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="desktop"  />



  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/checklist_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="checklist"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-adplugin_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-adplugin"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-akismet_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-akismet"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-cakeday_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-cakeday"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-chat-integration_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-chat-integration"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-details_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-details"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-footnote_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-footnote"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-lazy-videos_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-lazy-videos"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-local-dates_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-local-dates"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-narrative-bot_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-narrative-bot"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-presence_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-presence"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-solved_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-solved"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/discourse-spoiler-alert_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="discourse-spoiler-alert"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/hosted-site_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="hosted-site"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/poll_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="poll"  />
  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/poll_desktop_d86c892d7cd5311243d31a8f11787f4b0342874d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="poll_desktop"  />

  <link href="https://sjc6.discourse-cdn.com/standard17/stylesheets/desktop_theme_2_be4cb2b86ec06123c5e974acd20fd933d14b129d.css?__ws=discuss.redash.io" media="all" rel="stylesheet" data-target="desktop_theme" data-theme-id="2" data-theme-name="default"/>

    
    <meta id="data-ga-universal-analytics" data-tracking-code="UA-47088186-6" data-json="{&quot;cookieDomain&quot;:&quot;auto&quot;}" data-auto-link-domains="">

  <link rel="preload" href="https://global.discourse-cdn.com/standard17/assets/google-universal-analytics-v3-08add7ec997ab472fcd9f821d32ff7caf4b8b9a5de2ec18ca723a040be07a098.gz.js" as="script">
<script defer src="https://global.discourse-cdn.com/standard17/assets/google-universal-analytics-v3-08add7ec997ab472fcd9f821d32ff7caf4b8b9a5de2ec18ca723a040be07a098.gz.js"></script>


        <link rel="alternate nofollow" type="application/rss+xml" title="RSS feed of &#39;Duplicate dashbord with different queries from different table in same data source&#39;" href="https://discuss.redash.io/t/duplicate-dashbord-with-different-queries-from-different-table-in-same-data-source/10454.rss" />
    <meta property="og:site_name" content="Redash Discourse" />
<meta property="og:type" content="website" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:image" content="https://global.discourse-cdn.com/standard17/uploads/redash1/original/1X/e1838a8a0c506503a22e0c60e2334374b2895c87.png" />
<meta property="og:image" content="https://global.discourse-cdn.com/standard17/uploads/redash1/original/1X/e1838a8a0c506503a22e0c60e2334374b2895c87.png" />
<meta property="og:url" content="https://discuss.redash.io/t/duplicate-dashbord-with-different-queries-from-different-table-in-same-data-source/10454" />
<meta name="twitter:url" content="https://discuss.redash.io/t/duplicate-dashbord-with-different-queries-from-different-table-in-same-data-source/10454" />
<meta property="og:title" content="Duplicate dashbord with different queries from different table in same data source" />
<meta name="twitter:title" content="Duplicate dashbord with different queries from different table in same data source" />
<meta property="og:description" content="I have a dashboard that I want to use as a template for new dashboards, I figured a workflow like below should do the trick   get template dashboard data as json create new empty dashboard for each widget in the dashboard, recreate it’s query while recreating the query replace the table name from the SQL query with new table name name the query according to username and query name run newly created query to refresh it’s results update the query filed in the visualization field in the widget to t..." />
<meta name="twitter:description" content="I have a dashboard that I want to use as a template for new dashboards, I figured a workflow like below should do the trick   get template dashboard data as json create new empty dashboard for each widget in the dashboard, recreate it’s query while recreating the query replace the table name from the SQL query with new table name name the query according to username and query name run newly created query to refresh it’s results update the query filed in the visualization field in the widget to t..." />
<meta property="og:article:section" content="Support" />
<meta property="og:article:section:color" content="BF1E2E" />
<meta property="og:article:section" content="Usage Support" />
<meta property="og:article:section:color" content="AB9364" />
<meta name="twitter:label1" value="Reading time" />
<meta name="twitter:data1" value="1 mins 🕑" />
<meta name="twitter:label2" value="Likes" />
<meta name="twitter:data2" value="1 ❤" />
<meta property="article:published_time" content="2022-05-12T11:57:19+00:00" />
<meta property="og:ignore_canonical" content="true" />


    <script type="application/ld+json">{"@context":"http://schema.org","@type":"QAPage","name":"Duplicate dashbord with different queries from different table in same data source","mainEntity":{"@type":"Question","name":"Duplicate dashbord with different queries from different table in same data source","text":"I have a dashboard that I want to use as a template for new dashboards, I figured a workflow like below should do the trick\n\nget template dashboard data as json\n\ncreate new empty dashboard\n\nfor each widget in the dashboard, recreate it’s query\n\nwhile recreating the query replace the table name from th&hellip;","upvoteCount":1,"answerCount":1,"dateCreated":"2022-05-12T11:57:19.909Z","author":{"@type":"Person","name":"Abubakar Yagoub"},"acceptedAnswer":{"@type":"Answer","text":"I am here to answer my own question, once more\n\nthe problem was my understanding of redash abstractions, what needed to be re-created was the widgets themselves with options from the template to preserve position, here’s an updated code that works\n\ndef create_dashboard(name: str, table_map: dict) -&gt; &hellip;","upvoteCount":0,"dateCreated":"2022-05-13T03:10:39.044Z","url":"https://discuss.redash.io/t/duplicate-dashbord-with-different-queries-from-different-table-in-same-data-source/10454/2","author":{"@type":"Person","name":"Blacksuan19"}}}}</script>
  </head>
  <body class="crawler ">
    
    <header>
  <a href="/">
    Redash Discourse
  </a>
</header>

    <div id="main-outlet" class="wrap" role="main">
        <div id="topic-title">
    <h1>
      <a href="/t/duplicate-dashbord-with-different-queries-from-different-table-in-same-data-source/10454">Duplicate dashbord with different queries from different table in same data source</a>
    </h1>

      <div class="topic-category" itemscope itemtype="http://schema.org/BreadcrumbList">
          <span itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
            <a href="https://discuss.redash.io/c/support/6" class="badge-wrapper bullet" itemprop="item">
              <span class='badge-category-bg' style='background-color: #BF1E2E'></span>
              <span class='badge-category clear-badge'>
                <span class='category-name' itemprop='name'>Support</span>
              </span>
            </a>
            <meta itemprop="position" content="1" />
          </span>
          <span itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
            <a href="https://discuss.redash.io/c/support/support-usage/10" class="badge-wrapper bullet" itemprop="item">
              <span class='badge-category-bg' style='background-color: #AB9364'></span>
              <span class='badge-category clear-badge'>
                <span class='category-name' itemprop='name'>Usage Support</span>
              </span>
            </a>
            <meta itemprop="position" content="2" />
          </span>
      </div>

  </div>

  

    <div itemscope itemtype='http://schema.org/DiscussionForumPosting'>
      <meta itemprop='headline' content='Duplicate dashbord with different queries from different table in same data source'>
        <meta itemprop='articleSection' content='Usage Support'>
      <meta itemprop='keywords' content=''>
      <div itemprop='publisher' itemscope itemtype="http://schema.org/Organization">
        <meta itemprop='name' content='Redash Discourse'>
          <div itemprop='logo' itemscope itemtype="http://schema.org/ImageObject">
            <meta itemprop='url' content='https://global.discourse-cdn.com/standard17/uploads/redash1/original/1X/c07bc573841e1e4a0013ea3b6fe088a1534228a3.png'>
          </div>
      </div>

          <div id='post_1'  class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/Blacksuan19'><span itemprop='name'>Blacksuan19</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/duplicate-dashbord-with-different-queries-from-different-table-in-same-data-source/10454">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2022-05-12T11:57:19Z' class='post-time'>
                    May 12, 2022, 11:57am
                  </time>
                  <meta itemprop='dateModified' content='2022-05-12T11:59:00Z'>
              <span itemprop='position'>1</span>
              </span>
            </div>
            <div class='post' itemprop='articleBody'>
              <p>I have a dashboard that I want to use as a template for new dashboards, I figured a workflow like below should do the trick</p>
<ul>
<li>get template dashboard data as json</li>
<li>create new empty dashboard</li>
<li>for each widget in the dashboard, recreate it’s query</li>
<li>while recreating the query replace the table name from the SQL query with new table name</li>
<li>name the query according to username and query name</li>
<li>run newly created query to refresh it’s results</li>
<li>update the query filed in the visualization field in the widget to the new created query</li>
<li>if a widget is encountered where it’s query has been already re-created use that (using query name for matching), otherwise create a new one</li>
<li>update new empty dashboard with new data</li>
</ul>
<p>currently, the queries are correctly created with updated SQL table and results, however, I get an error when updating the dashboard saying conflict for URL with no other information.</p>
<p>what does the error mean? and is there a simpler way to do this?</p>
<p>here’s the code for the function</p>
<pre><code class="lang-python">def create_dashboard(name: str, table_map: dict) -&gt; str:
    """
    Creates a new dashboard with `name` from template
    replacing old tables with new tables according to `table_map`.
    """
    username = table_map[list(table_map.keys())[0]].split("_")[0]
    template = "churn-template"
    template_id = get_dashboard_id(template)
    dash_data = rd.get_dashboard(template_id)
    res = rd.create_dashboard(name)
    new_id = res["id"]
    for widget in dash_data["widgets"]:
        widget["dashboard_id"] = new_id
        query = widget["visualization"]["query"]
        new_q_id = get_query_id(f"{username}_{query['name']}")
        if new_q_id:
            widget["visualization"]["query"] = rd.get_query(new_q_id)
            continue
        widget["visualization"]["query"] = duplicate_query_table(query, table_map)
    # print(dash_data)
    rd.update_dashboard(new_id, dash_data)
    publish_dashboard(name)
    return share_dashboard(name)
</code></pre>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="1" />
              <span class='post-likes'>1 Like</span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
          <div id='post_2' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/Blacksuan19'><span itemprop='name'>Blacksuan19</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/duplicate-dashbord-with-different-queries-from-different-table-in-same-data-source/10454">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2022-05-13T03:10:39Z' class='post-time'>
                    May 13, 2022,  3:10am
                  </time>
                  <meta itemprop='dateModified' content='2022-05-13T03:10:39Z'>
              <span itemprop='position'>2</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>I am here to answer my own question, once more<br>
the problem was my understanding of redash abstractions, what needed to be re-created was the widgets themselves with options from the template to preserve position, here’s an updated code that works</p>
<pre><code class="lang-python">def create_dashboard(name: str, table_map: dict) -&gt; str:
    username = table_map[list(table_map.keys())[0]].split("_")[0]
    template = "churn-template"
    template_id = get_dashboard_id(template)
    old_data = rd.get_dashboard(template_id)
    new_id = rd.create_dashboard(name)["id"]
    for widget in old_data["widgets"]:
        options = widget["options"]
        query = widget["visualization"]["query"]
        old_vis = widget["visualization"]
        new_q_id = get_query_id(f"{username}_{query['name']}")
        if new_q_id:
            rd.create_widget(
                dashboard_id=new_id,
                visualization_id=get_vis_id_query(
                    old_vis["name"], rd.get_query(new_q_id)
                ),
                text="",
                options=options,
            )
            continue
        new_q = duplicate_query_table(query, table_map)
        rd.create_widget(
            dashboard_id=new_id,
            visualization_id=get_vis_id_query(
                old_vis["name"], rd.get_query(new_q["id"])
            ),
            text="",
            options=options,
        )

    publish_dashboard(name)
    return share_dashboard(name)
</code></pre>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="1" />
              </div>

          </div>
          <div id='post_3' itemprop='comment' itemscope itemtype='http://schema.org/Comment' class='topic-body crawler-post'>
            <div class='crawler-post-meta'>
              <span class="creator" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <a itemprop="url" href='https://discuss.redash.io/u/jesse'><span itemprop='name'>jesse</span></a>
                
              </span>

              <link itemprop="mainEntityOfPage" href="https://discuss.redash.io/t/duplicate-dashbord-with-different-queries-from-different-table-in-same-data-source/10454">


              <span class="crawler-post-infos">
                  <time itemprop='datePublished' datetime='2022-05-13T21:38:46Z' class='post-time'>
                    May 13, 2022,  9:38pm
                  </time>
                  <meta itemprop='dateModified' content='2022-05-13T21:38:46Z'>
              <span itemprop='position'>3</span>
              </span>
            </div>
            <div class='post' itemprop='text'>
              <p>Thanks for posting your solution!</p>
<p>For reference, here is the official redash-toolbelt script for cloning dashboards. It behaves similarly, although it interacts through the API: <a href="https://github.com/getredash/redash-toolbelt/blob/master/redash_toolbelt/examples/clone_dashboard_and_queries.py" class="inline-onebox">redash-toolbelt/clone_dashboard_and_queries.py at master · getredash/redash-toolbelt · GitHub</a></p>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
              <meta itemprop="interactionType" content="http://schema.org/LikeAction"/>
              <meta itemprop="userInteractionCount" content="0" />
              <span class='post-likes'></span>
            </div>

            <div itemprop="interactionStatistic" itemscope itemtype="http://schema.org/InteractionCounter">
                <meta itemprop="interactionType" content="http://schema.org/CommentAction"/>
                <meta itemprop="userInteractionCount" content="0" />
              </div>

          </div>
    </div>






    </div>
    <footer class="container wrap">
  <nav class='crawler-nav'>
    <ul>
      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
        <span itemprop='name'>
          <a href='/' itemprop="url">Home </a>
        </span>
      </li>
      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
        <span itemprop='name'>
          <a href='/categories' itemprop="url">Categories </a>
        </span>
      </li>
      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
        <span itemprop='name'>
          <a href='/guidelines' itemprop="url">FAQ/Guidelines </a>
        </span>
      </li>
        <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
          <span itemprop='name'>
            <a href='http://redash.io/terms.html' itemprop="url">Terms of Service </a>
          </span>
        </li>
        <li itemscope itemtype='http://schema.org/SiteNavigationElement'>
          <span itemprop='name'>
            <a href='http://redash.io/privacy.html' itemprop="url">Privacy Policy </a>
          </span>
        </li>
    </ul>
  </nav>
  <p class='powered-by-link'>Powered by <a href="https://www.discourse.org">Discourse</a>, best viewed with JavaScript enabled</p>
</footer>

    
    
  </body>
  
</html>
